{"version":3,"sources":["node_modules/browser-pack/_prelude.js","core/accessibility/create_a11y_block.js","index.js","core/accessibility/update_a11y.js","core/converters/convert_hours_to_12hr_time.js","core/converters/convert_number.js","core/converters/convert_to_12hr_time.js","core/converters/convert_to_24hr_time.js","core/converters/leading_zero.js","core/events/bind_events.js","core/events/create_event.js","core/events/handle_tab.js","core/events/trigger_both_events.js","core/events/trigger_event.js","core/getters/get_ancestors.js","core/getters/get_current_segment.js","core/getters/get_label.js","core/getters/get_selected_range.js","core/getters/get_values.js","core/helpers/manual_entry_log.js","core/helpers/values.js","core/selectors/next_segment.js","core/selectors/prev_segment.js","core/selectors/select_cursor_segment.js","core/selectors/select_segment.js","core/selectors/traverse.js","core/setters/apply_default.js","core/setters/clear_segment.js","core/setters/decrement.js","core/setters/decrement_current_segment.js","core/setters/increment.js","core/setters/increment_current_segment.js","core/setters/manual_number_entry.js","core/setters/nudge_time_segment.js","core/setters/reset.js","core/setters/set_data_attribute.js","core/setters/set_mode.js","core/setters/set_segment.js","core/setters/set_time.js","core/setters/switch_mode.js","core/setters/switch_times.js","core/setters/switch_to_data_value.js","core/setters/update_time.js","core/static-values/all_number_keys.js","core/static-values/named_keys.js","core/static-values/ranges.js","core/static-values/segments.js","core/static-values/sorted_number_keys.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$block","document","createElement","setAttribute","classList","add","querySelector","appendChild","2","get_current_segment","get_values","$input","announcementArray","setTimeout","current_segment","values","value","finalValue","segmentName","hrs","min","mode","announcements","initial","select","update","textArray","map","providedString","fullValue","replace","html","join","polyfill","label","$a11y","innerHTML","../getters/get_current_segment","../getters/get_values","3","hours","4","number","isNaN","parseInt","5","convert_number","convert_hours_to_12hr_time","leading_zero","timeString_24hr","twentyFour_regex","result","exec","hrs_24","hrs_12","isPM","./convert_hours_to_12hr_time","./convert_number","./leading_zero","6","timeString_12hr","test","newHrs","indexOf","timeResult","finalHrs","timeRegEx","7","purified","8","auto_swap","autoSwap","switch_times","select_segment","next_segment","prev_segment","select_cursor_segment","reset","manual_number_entry","clear_segment","increment_current_segment","decrement_current_segment","set_mode","handle_tab","all_number_keys","named_keys","update_a11y","prev_value","shiftKey","addEventListener","form","focused_via_click","current_value","dataset","preventDefault","segment","is_enter_key","which","is_number_key","is_named_key","is_arrow_key","ArrowDown","ArrowRight","ArrowUp","ArrowLeft","is_mode_key","is_delete_key","Delete","Backspace","Escape","Tab","../accessibility/update_a11y","../events/handle_tab","../helpers/values","../selectors/next_segment","../selectors/prev_segment","../selectors/select_cursor_segment","../selectors/select_segment","../setters/clear_segment","../setters/decrement_current_segment","../setters/increment_current_segment","../setters/manual_number_entry","../setters/reset","../setters/set_mode","../setters/switch_times","../static-values/all_number_keys","../static-values/named_keys","9","eventName","event","createEvent","initEvent","10","backwards_and_first","forwards_and_last","11","trigger_event","./trigger_event","12","can_trigger_change","create_event","inputEvent","changeEvent","input","change","dispatchEvent","./create_event","13","selectorString","$elem","ancestors","push","matchesSelector","msMatchesSelector","matches","parentElement","14","ranges","get_selected_range","selection","range","aboveMin","start","belowMax","end","../static-values/ranges","./get_selected_range","15","aria_labelledby","ariaLabelByID","getAttribute","$ariaLabelBy","getElementById","textContent","aria_label","ariaLabel","for_attribute","id","$forLabel","label_wrapper_element","get_ancestors","$parentLabel","nodeName","title_attribute","titleLabel","labelText","console","error","./get_ancestors","16","selectionStart","selectionEnd","17","timeString","regEx","../converters/convert_number","18","clear","manual_entry_log","entry","items","19","obj","key_values","key","20","traverse","./traverse","21","22","./select_segment","23","set_input_type","type","setSelectionRange","actions","24","segments","direction","modifier","next_segment_index","next","prev","../helpers/manual_entry_log","../static-values/segments","25","set_data_attribute","trigger_both_events","../events/trigger_both_events","../setters/set_data_attribute","26","set_segment","./set_segment","27","switch_mode","nudge_time_segment","./nudge_time_segment","./switch_mode","28","decrement","../setters/decrement","29","30","increment","../setters/increment","31","sorted_number_keys","key_value","entry_count","upper_limits","limit","full_limit","full_entry","at_limit","../static-values/sorted_number_keys","32","time","current_values","current_time","Date","getHours","getMinutes","minutes","up","down","../converters/convert_hours_to_12hr_time","../converters/leading_zero","33","apply_default","./apply_default","34","convert_to_24hr_time","filteredString","time24hr","../converters/convert_to_24hr_time","35","36","newInputVal","./set_data_attribute","37","convert_to_12hr_time","time_string_24hr","twelveHr","../converters/convert_to_12hr_time","38","default_mode","current_mode","new_mode","--","AM","PM","39","switch_to_data_value","set_time","format","is12hr","./set_time","./switch_to_data_value","40","replacementVal","41","../setters/set_time","42","43","Shift","44","45","Object","keys","./ranges","46","forEach","index","number_val","./all_number_keys","47","TimePolyfill","accessibility_block_created","create_a11y_block","get_label","update_time","swap","forcedFormat","bind_events","window","./core/accessibility/create_a11y_block","./core/events/bind_events","./core/getters/get_label","./core/setters/apply_default","./core/setters/set_data_attribute","./core/setters/switch_times","./core/setters/update_time"],"mappings":"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","file":"time-input-polyfill.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports = function create_accessibility_block() {\r\n  var $block = document.createElement('div')\r\n  $block.setAttribute('aria-live', 'assertive')\r\n  $block.setAttribute(\r\n    'style',\r\n    'position: absolute; opacity: 0; height: 0; width: 0; overflow: hidden; pointer-events: none;'\r\n  )\r\n  $block.classList.add('time-input-polyfill-accessibility-block')\r\n  document.querySelector('body').appendChild($block)\r\n  return $block\r\n}\r\n","var apply_default = require('./core/setters/apply_default')\r\nvar update_time = require('./core/setters/update_time')\r\nvar set_data_attribute = require('./core/setters/set_data_attribute')\r\nvar bind_events = require('./core/events/bind_events')\r\nvar switch_times = require('./core/setters/switch_times')\r\nvar get_label = require('./core/getters/get_label')\r\n\r\nvar create_a11y_block = require('./core/accessibility/create_a11y_block')\r\n\r\nvar accessibility_block_created = false\r\nvar $a11y\r\n\r\nfunction TimePolyfill($input) {\r\n  $input.setAttribute('autocomplete', 'off')\r\n\r\n  // Prevent screen reader from announcing the default stuff\r\n  $input.setAttribute('aria-hidden', true)\r\n\r\n  if (!accessibility_block_created) {\r\n    $a11y = create_a11y_block()\r\n    accessibility_block_created = true\r\n  }\r\n\r\n  var label = get_label($input)\r\n\r\n  $input.polyfill = {\r\n    $a11y: $a11y,\r\n    label: label,\r\n    autoSwap: true,\r\n    update: function() {\r\n      update_time($input)\r\n    },\r\n    swap: function(forcedFormat) {\r\n      switch_times($input, forcedFormat)\r\n    },\r\n  }\r\n\r\n  if ($input.value === '' || /--/.test($input.value)) {\r\n    apply_default($input)\r\n    set_data_attribute($input, '')\r\n  } else {\r\n    update_time($input)\r\n    set_data_attribute($input, $input.value)\r\n  }\r\n\r\n  bind_events($input)\r\n}\r\n\r\nif (window) window.TimePolyfill = TimePolyfill\r\nif (module) module.exports = TimePolyfill\r\n","var get_current_segment = require('../getters/get_current_segment')\r\nvar get_values = require('../getters/get_values')\r\n\r\nmodule.exports = function update_a11y($input, announcementArray) {\r\n  // Timeout helps ensure that the input has stabilized\r\n  setTimeout(function() {\r\n    var current_segment = get_current_segment($input)\r\n    var values = get_values($input)\r\n    var value = values[current_segment]\r\n    var finalValue = value == '--' ? 'blank' : value\r\n\r\n    var segmentName = {\r\n      hrs: 'Hours',\r\n      min: 'Minutes',\r\n      mode: 'AM/PM',\r\n    }[current_segment]\r\n\r\n    var announcements = {\r\n      initial: '$label grouping $fullValue.',\r\n      select: '$segmentName spin button $segmentValue.',\r\n      update: '$segmentValue.',\r\n    }\r\n\r\n    var textArray = announcementArray.map(function(providedString) {\r\n      if (announcements[providedString]) {\r\n        return announcements[providedString]\r\n      }\r\n      return providedString\r\n    })\r\n\r\n    var fullValue = $input.value.replace(/--/g, 'blank')\r\n\r\n    var html = '<p>' + textArray.join('</p><p>') + '</p>'\r\n    html = html.replace(/\\$label/g, $input.polyfill.label)\r\n    html = html.replace(/\\$segmentName/g, segmentName)\r\n    html = html.replace(/\\$segmentValue/g, finalValue)\r\n    html = html.replace(/\\$fullValue/g, fullValue)\r\n\r\n    $input.polyfill.$a11y.innerHTML = html\r\n  }, 1)\r\n}\r\n","module.exports = function convert_hours_to_12hr_time(hours) {\r\n  return hours <= 12 ? (hours === 0 ? 12 : hours) : hours - 12\r\n}\r\n","module.exports = function convert_number(number) {\r\n  return isNaN(number) ? number : parseInt(number)\r\n}\r\n","var convert_number = require('./convert_number')\r\nvar convert_hours_to_12hr_time = require('./convert_hours_to_12hr_time')\r\nvar leading_zero = require('./leading_zero')\r\n\r\nmodule.exports = function convert_to_12hr_time(timeString_24hr) {\r\n  if (timeString_24hr === '') return '--:-- --'\r\n  var twentyFour_regex = /([0-9]{2})\\:([0-9]{2})/\r\n  var result = twentyFour_regex.exec(timeString_24hr)\r\n  var hrs_24 = convert_number(result[1])\r\n  var min = result[2]\r\n  var hrs_12 = convert_hours_to_12hr_time(hrs_24)\r\n  var isPM = hrs_24 >= 12\r\n  var mode = isPM ? 'PM' : 'AM'\r\n  return [leading_zero(hrs_12), ':', min, ' ', mode].join('')\r\n}\r\n","var leading_zero = require('./leading_zero')\r\n\r\nmodule.exports = function convert_to_24hr_time(timeString_12hr) {\r\n  if (/-/.test(timeString_12hr)) return ''\r\n  var isPM = timeString_12hr.indexOf('PM') > -1\r\n  var timeResult = /^([0-9]{2})/.exec(timeString_12hr)\r\n  var hrs = timeResult ? parseInt(timeResult[1]) : ''\r\n  var newHrs\r\n  if (hrs === 12) {\r\n    newHrs = isPM ? 12 : 0\r\n  } else {\r\n    newHrs = isPM ? hrs + 12 : hrs\r\n  }\r\n  var finalHrs = newHrs === 24 ? 0 : newHrs\r\n  var timeRegEx = /^[0-9]{2}:([0-9]{2}) (AM|PM)/\r\n  return timeString_12hr.replace(timeRegEx, leading_zero(finalHrs) + ':$1')\r\n}\r\n","module.exports = function leading_zero(number) {\r\n  if (isNaN(number)) return number\r\n  var purified = parseInt(number)\r\n  return purified < 10 ? '0' + purified : number\r\n}\r\n","var values = require('../helpers/values')\r\n\r\nvar select_segment = require('../selectors/select_segment')\r\n\r\nvar next_segment = require('../selectors/next_segment')\r\nvar prev_segment = require('../selectors/prev_segment')\r\nvar select_cursor_segment = require('../selectors/select_cursor_segment')\r\n\r\nvar get_current_segment = require('../getters/get_current_segment')\r\n\r\nvar reset = require('../setters/reset')\r\nvar manual_number_entry = require('../setters/manual_number_entry')\r\nvar clear_segment = require('../setters/clear_segment')\r\nvar increment_current_segment = require('../setters/increment_current_segment')\r\nvar decrement_current_segment = require('../setters/decrement_current_segment')\r\nvar set_mode = require('../setters/set_mode')\r\nvar switch_times = require('../setters/switch_times')\r\n\r\nvar handle_tab = require('../events/handle_tab')\r\n\r\nvar all_number_keys = require('../static-values/all_number_keys')\r\nvar named_keys = require('../static-values/named_keys')\r\n\r\nvar update_a11y = require('../accessibility/update_a11y')\r\n\r\nmodule.exports = function bind_events($input) {\r\n  var prev_value = ''\r\n\r\n  var shiftKey = false\r\n\r\n  document.addEventListener('keydown', function(e) {\r\n    shiftKey = e.shiftKey\r\n  })\r\n  document.addEventListener('keyup', function(e) {\r\n    shiftKey = e.shiftKey\r\n  })\r\n\r\n  if ($input.form) {\r\n    $input.form.addEventListener('submit', function() {\r\n      auto_swap($input)\r\n    })\r\n  }\r\n\r\n  var focused_via_click = false\r\n\r\n  $input.addEventListener('mousedown', function() {\r\n    focused_via_click = true\r\n  })\r\n\r\n  // Turns the IE clear button into a reset button\r\n  $input.addEventListener('mouseup', function() {\r\n    setTimeout(function() {\r\n      if ($input.value === '') reset($input)\r\n    }, 1)\r\n  })\r\n\r\n  $input.addEventListener('click', function(e) {\r\n    select_cursor_segment($input)\r\n  })\r\n\r\n  $input.addEventListener('blur', function() {\r\n    var current_value = $input.dataset.value\r\n    if (current_value !== prev_value) {\r\n      prev_value = current_value\r\n    }\r\n    focused_via_click = false\r\n  })\r\n\r\n  $input.addEventListener('focus', function(e) {\r\n    if (!focused_via_click) {\r\n      e.preventDefault()\r\n      var segment = shiftKey ? 'mode' : 'hrs'\r\n      select_segment($input, segment)\r\n    }\r\n    update_a11y($input, ['initial', 'select'])\r\n  })\r\n\r\n  $input.addEventListener('keydown', function(e) {\r\n    var is_enter_key = e.which === 13\r\n    if (is_enter_key) return true\r\n\r\n    var is_number_key = all_number_keys.indexOf(e.which) > -1\r\n    var is_named_key = values(named_keys).indexOf(e.which) > -1\r\n    var is_arrow_key =\r\n      [\r\n        named_keys.ArrowDown,\r\n        named_keys.ArrowRight,\r\n        named_keys.ArrowUp,\r\n        named_keys.ArrowLeft,\r\n      ].indexOf(e.which) > -1\r\n    var is_mode_key = [named_keys.a, named_keys.p].indexOf(e.which) > -1\r\n    var is_delete_key =\r\n      [named_keys.Delete, named_keys.Backspace].indexOf(e.which) > -1\r\n\r\n    if (\r\n      !is_named_key ||\r\n      is_arrow_key ||\r\n      is_number_key ||\r\n      is_mode_key ||\r\n      is_delete_key\r\n    ) {\r\n      e.preventDefault()\r\n    }\r\n\r\n    if (is_number_key) {\r\n      manual_number_entry($input, e.which)\r\n    }\r\n\r\n    if (is_delete_key) {\r\n      var segment = get_current_segment($input)\r\n      clear_segment($input, segment)\r\n    }\r\n\r\n    switch (e.which) {\r\n      case named_keys.ArrowRight:\r\n        next_segment($input)\r\n        break\r\n      case named_keys.ArrowLeft:\r\n        prev_segment($input)\r\n        break\r\n      case named_keys.ArrowUp:\r\n        increment_current_segment($input)\r\n        break\r\n      case named_keys.ArrowDown:\r\n        decrement_current_segment($input)\r\n        break\r\n      case named_keys.Escape:\r\n        reset($input)\r\n        break\r\n      case named_keys.a:\r\n        set_mode($input, 'AM')\r\n        break\r\n      case named_keys.p:\r\n        set_mode($input, 'PM')\r\n        break\r\n      case named_keys.Tab:\r\n        handle_tab($input, e)\r\n        break\r\n    }\r\n  })\r\n}\r\n\r\nfunction auto_swap($input) {\r\n  if ($input.polyfill.autoSwap) {\r\n    switch_times($input, 24)\r\n    setTimeout(function() {\r\n      switch_times($input, 12)\r\n    }, 1)\r\n  }\r\n}\r\n","module.exports = function create_event(eventName) {\r\n  var event = document.createEvent('Event')\r\n  event.initEvent(eventName, true, true)\r\n  return event\r\n}\r\n","var get_current_segment = require('../getters/get_current_segment')\r\nvar prev_segment = require('../selectors/prev_segment')\r\nvar next_segment = require('../selectors/next_segment')\r\n\r\nmodule.exports = function handle_tab($input, e) {\r\n  var current_segment = get_current_segment($input)\r\n  var backwards_and_first = e.shiftKey && current_segment === 'hrs'\r\n  var forwards_and_last = !e.shiftKey && current_segment === 'mode'\r\n\r\n  if (!backwards_and_first && !forwards_and_last) {\r\n    e.preventDefault()\r\n    if (e.shiftKey) {\r\n      prev_segment($input)\r\n    } else {\r\n      next_segment($input)\r\n    }\r\n  }\r\n}\r\n","var trigger_event = require('./trigger_event')\r\n\r\n// It seems that oninput and onchange are treated the same way by browsers :/\r\nmodule.exports = function trigger_both_events($input) {\r\n  // the event only ever fires if there is a full valid value available\r\n  trigger_event($input, 'input')\r\n  trigger_event($input, 'change')\r\n}\r\n","var create_event = require('./create_event')\r\n\r\nvar inputEvent = create_event('input')\r\nvar changeEvent = create_event('change')\r\n\r\nmodule.exports = function trigger_event($input, eventName) {\r\n  var event = {\r\n    input: inputEvent,\r\n    change: changeEvent,\r\n  }[eventName]\r\n\r\n  if (can_trigger_change($input)) {\r\n    $input.dispatchEvent(event)\r\n  }\r\n}\r\n\r\n// Browsers only send out input and change events if the time element has a full valid value\r\nfunction can_trigger_change($input) {\r\n  return !/--/.test($input.value)\r\n}\r\n","// selector is optional, it allows for an early exit\r\nmodule.exports = function($input, selectorString) {\r\n  var $elem = $input\r\n\r\n  // https://stackoverflow.com/a/8729274/1611058\r\n  var ancestors = []\r\n  while ($elem) {\r\n    ancestors.push($elem)\r\n    var matchesSelector = $elem.msMatchesSelector\r\n      ? $elem.msMatchesSelector(selectorString)\r\n      : $elem.matches(selectorString)\r\n    if (matchesSelector) {\r\n      return ancestors\r\n    }\r\n    $elem = $elem.parentElement\r\n  }\r\n\r\n  return ancestors\r\n}\r\n","var ranges = require('../static-values/ranges')\r\nvar get_selected_range = require('./get_selected_range')\r\n\r\nmodule.exports = function get_current_segment($input) {\r\n  var selection = get_selected_range($input)\r\n  for (var segment in ranges) {\r\n    var range = ranges[segment]\r\n    var aboveMin = range.start <= selection.start\r\n    var belowMax = range.end >= selection.end\r\n    if (aboveMin && belowMax) {\r\n      return segment\r\n    }\r\n  }\r\n  return 'hrs'\r\n}\r\n","var get_ancestors = require('./get_ancestors')\r\n\r\nmodule.exports = function get_label($input) {\r\n  var labelText =\r\n    aria_labelledby($input) ||\r\n    aria_label($input) ||\r\n    for_attribute($input) ||\r\n    label_wrapper_element($input) ||\r\n    title_attribute($input)\r\n\r\n  if (labelText) return labelText\r\n\r\n  console.error('Label text for input not found.', $input)\r\n  throw new Error('Cannot polyfill time input due to a missing label.')\r\n}\r\n\r\nfunction aria_labelledby($input) {\r\n  var ariaLabelByID = $input.getAttribute('aria-labelledby')\r\n  if (ariaLabelByID) {\r\n    var $ariaLabelBy = document.getElementById(ariaLabelByID)\r\n    if ($ariaLabelBy) return $ariaLabelBy.textContent\r\n  }\r\n  return false\r\n}\r\n\r\nfunction aria_label($input) {\r\n  var ariaLabel = $input.getAttribute('aria-label')\r\n  if (ariaLabel) return ariaLabel\r\n  return false\r\n}\r\n\r\nfunction for_attribute($input) {\r\n  if ($input.id) {\r\n    var $forLabel = document.querySelector('label[for=\"' + $input.id + '\"]')\r\n    if ($forLabel) return $forLabel.textContent\r\n  }\r\n  return false\r\n}\r\n\r\nfunction label_wrapper_element($input) {\r\n  var ancestors = get_ancestors($input, 'label')\r\n  var $parentLabel = ancestors[ancestors.length - 1]\r\n  if ($parentLabel.nodeName == 'LABEL') return $parentLabel.textContent\r\n  return false\r\n}\r\n\r\nfunction title_attribute($input) {\r\n  var titleLabel = $input.getAttribute('title')\r\n  if (titleLabel) return titleLabel\r\n  return false\r\n}\r\n","module.exports = function get_selected_range($input) {\r\n  return { start: $input.selectionStart, end: $input.selectionEnd }\r\n}\r\n","var convert_number = require('../converters/convert_number')\r\n\r\nmodule.exports = function get_values($input, timeString) {\r\n  var value = timeString ? timeString : $input.value\r\n  var regEx = /([0-9-]{1,2})\\:([0-9-]{1,2})\\s?(AM|PM|\\-\\-)?/\r\n  var result = regEx.exec(value)\r\n\r\n  return {\r\n    hrs: convert_number(result[1]),\r\n    min: convert_number(result[2]),\r\n    mode: result[3],\r\n  }\r\n}\r\n","var manual_entry_log = []\r\n\r\nfunction clear() {\r\n  manual_entry_log = []\r\n}\r\n\r\nfunction add(entry) {\r\n  manual_entry_log.push(entry)\r\n}\r\n\r\nfunction items() {\r\n  return manual_entry_log\r\n}\r\n\r\nmodule.exports = {\r\n  items: items,\r\n  clear: clear,\r\n  add: add,\r\n}\r\n","// IE11 doesn't support Object.values()\r\nmodule.exports = function values(obj) {\r\n  var key_values = []\r\n  for (var key in obj) {\r\n    key_values.push(obj[key])\r\n  }\r\n  return key_values\r\n}\r\n","var traverse = require('./traverse')\r\n\r\nmodule.exports = function next_segment($input) {\r\n  traverse($input, 'next')\r\n}\r\n","var traverse = require('./traverse')\r\n\r\nmodule.exports = function prev_segment($input) {\r\n  traverse($input, 'prev')\r\n}\r\n","var get_current_segment = require('../getters/get_current_segment')\r\nvar select_segment = require('./select_segment')\r\n\r\nmodule.exports = function select_cursor_segment($input) {\r\n  var current_segment = get_current_segment($input)\r\n  select_segment($input, current_segment)\r\n}\r\n","module.exports = function select_segment($input, segment) {\r\n  set_input_type()\r\n\r\n  var actions = {\r\n    hrs: select(0, 2),\r\n    min: select(3, 5),\r\n    mode: select(6, 8),\r\n  }\r\n\r\n  actions[segment]($input)\r\n\r\n  function set_input_type() {\r\n    var type = segment === 'mode' ? 'text' : 'tel'\r\n    $input.setAttribute('type', type)\r\n  }\r\n\r\n  function select(start, end) {\r\n    return function() {\r\n      $input.setSelectionRange(start, end)\r\n    }\r\n  }\r\n}\r\n","var get_current_segment = require('../getters/get_current_segment')\r\nvar select_segment = require('../selectors/select_segment')\r\n\r\nvar manual_entry_log = require('../helpers/manual_entry_log')\r\nvar segments = require('../static-values/segments')\r\n\r\nvar update_a11y = require('../accessibility/update_a11y')\r\n\r\nmodule.exports = function traverse($input, direction) {\r\n  var segment = get_current_segment($input)\r\n\r\n  var modifier = direction === 'next' ? 1 : -1\r\n  var next_segment_index = segments.indexOf(segment) + modifier\r\n\r\n  var next_segment = {\r\n    next: segments[next_segment_index] || 'mode',\r\n    prev: next_segment_index < 0 ? 'hrs' : segments[next_segment_index],\r\n  }[direction]\r\n\r\n  select_segment($input, next_segment)\r\n  manual_entry_log.clear()\r\n  update_a11y($input, ['select'])\r\n}\r\n","// I need to keep this separate from reset so that\r\n// I can reset without attracting focus\r\n\r\nvar set_data_attribute = require('../setters/set_data_attribute')\r\nvar trigger_both_events = require('../events/trigger_both_events')\r\n\r\nmodule.exports = function apply_default($input) {\r\n  $input.value = '--:-- --'\r\n  set_data_attribute($input, '')\r\n  trigger_both_events($input)\r\n}\r\n","var set_segment = require('./set_segment')\r\nvar update_a11y = require('../accessibility/update_a11y')\r\n\r\nmodule.exports = function clear_segment($input, segment) {\r\n  set_segment($input, segment, '--')\r\n  update_a11y($input, ['update'])\r\n}\r\n","var switch_mode = require('./switch_mode')\r\nvar nudge_time_segment = require('./nudge_time_segment')\r\nvar update_a11y = require('../accessibility/update_a11y')\r\n\r\nmodule.exports = function decrement($input, segment) {\r\n  if (segment === 'mode') {\r\n    switch_mode($input, 'PM')\r\n  } else {\r\n    nudge_time_segment($input, segment, 'down')\r\n  }\r\n  update_a11y($input, ['update'])\r\n}\r\n","var get_current_segment = require('../getters/get_current_segment')\r\nvar decrement = require('../setters/decrement')\r\n\r\nmodule.exports = function decrement_current_segment($input) {\r\n  var current_segment = get_current_segment($input)\r\n  decrement($input, current_segment)\r\n}\r\n","var switch_mode = require('./switch_mode')\r\nvar nudge_time_segment = require('./nudge_time_segment')\r\nvar update_a11y = require('../accessibility/update_a11y')\r\n\r\nmodule.exports = function increment($input, segment) {\r\n  if (segment === 'mode') {\r\n    switch_mode($input, 'AM')\r\n  } else {\r\n    nudge_time_segment($input, segment, 'up')\r\n  }\r\n  update_a11y($input, ['update'])\r\n}\r\n","var get_current_segment = require('../getters/get_current_segment')\r\nvar increment = require('../setters/increment')\r\n\r\nmodule.exports = function increment_current_segment($input) {\r\n  var current_segment = get_current_segment($input)\r\n  increment($input, current_segment)\r\n}\r\n","var get_current_segment = require('../getters/get_current_segment')\r\nvar set_segment = require('./set_segment')\r\nvar next_segment = require('../selectors/next_segment')\r\n\r\nvar manual_entry_log = require('../helpers/manual_entry_log')\r\nvar sorted_number_keys = require('../static-values/sorted_number_keys')\r\n\r\nmodule.exports = function manual_number_entry($input, key) {\r\n  var key_value = sorted_number_keys[key]\r\n  var segment = get_current_segment($input)\r\n\r\n  if (segment !== 'mode') {\r\n    var entry_count = manual_entry_log.items().length\r\n\r\n    var upper_limits = {\r\n      hrs: [1, 2],\r\n      min: [5, 9],\r\n    }\r\n    var limit = upper_limits[segment][entry_count]\r\n\r\n    if (entry_count < 2) {\r\n      manual_entry_log.add(key_value)\r\n    }\r\n\r\n    var full_limit = parseInt(upper_limits[segment].join(''))\r\n    var full_entry = parseInt(manual_entry_log.items().join(''))\r\n\r\n    if (full_limit >= full_entry) {\r\n      set_segment($input, segment, full_entry)\r\n    }\r\n\r\n    var at_limit = key_value > limit || manual_entry_log.items().length === 2\r\n\r\n    if (at_limit) {\r\n      next_segment($input)\r\n    }\r\n  }\r\n}\r\n","var get_values = require('../getters/get_values')\r\nvar convert_hours_to_12hr_time = require('../converters/convert_hours_to_12hr_time')\r\nvar leading_zero = require('../converters/leading_zero')\r\nvar set_segment = require('./set_segment')\r\n\r\nmodule.exports = function nudge_time_segment($input, segment, direction) {\r\n  var current_values = get_values($input)\r\n  var time\r\n\r\n  var modifier = direction === 'up' ? 1 : -1\r\n\r\n  if (current_values[segment] === '--') {\r\n    var current_time = new Date()\r\n    time = {\r\n      hrs: convert_hours_to_12hr_time(current_time.getHours()),\r\n      min: current_time.getMinutes(),\r\n    }\r\n  } else {\r\n    var minutes = {\r\n      up: current_values.min < 59 ? current_values.min + modifier : 0,\r\n      down: current_values.min === 0 ? 59 : current_values.min + modifier,\r\n    }\r\n    time = {\r\n      hrs: convert_hours_to_12hr_time(current_values.hrs + modifier),\r\n      min: minutes[direction],\r\n    }\r\n  }\r\n\r\n  set_segment($input, segment, leading_zero(time[segment]))\r\n}\r\n","var apply_default = require('./apply_default')\r\nvar select_segment = require('../selectors/select_segment')\r\n\r\nmodule.exports = function reset($input) {\r\n  apply_default($input)\r\n  select_segment($input, 'hrs')\r\n}\r\n","var convert_to_24hr_time = require('../converters/convert_to_24hr_time')\r\n\r\nmodule.exports = function set_data_attribute($input, timeString_12hr) {\r\n  var filteredString = timeString_12hr.indexOf('-') > -1 ? '' : timeString_12hr\r\n  var time24hr = convert_to_24hr_time(filteredString)\r\n  $input.setAttribute('data-value', time24hr)\r\n}\r\n","var get_current_segment = require('../getters/get_current_segment')\r\nvar set_segment = require('./set_segment')\r\n\r\nmodule.exports = function set_mode($input, type) {\r\n  var segment = get_current_segment($input)\r\n  if (segment === 'mode') {\r\n    set_segment($input, segment, type)\r\n  }\r\n}\r\n","var get_values = require('../getters/get_values')\r\nvar leading_zero = require('../converters/leading_zero')\r\nvar select_segment = require('../selectors/select_segment')\r\nvar set_data_attribute = require('./set_data_attribute')\r\nvar trigger_both_events = require('../events/trigger_both_events')\r\n\r\nmodule.exports = function set_segment($input, segment, value) {\r\n  var values = get_values($input)\r\n  values[segment] = value\r\n  var newInputVal = [\r\n    leading_zero(values.hrs),\r\n    ':',\r\n    leading_zero(values.min),\r\n    ' ',\r\n    values.mode,\r\n  ].join('')\r\n  $input.value = newInputVal\r\n  select_segment($input, segment)\r\n  set_data_attribute($input, newInputVal)\r\n  trigger_both_events($input)\r\n}\r\n","var convert_to_12hr_time = require('../converters/convert_to_12hr_time')\r\nvar set_data_attribute = require('../setters/set_data_attribute')\r\n\r\nmodule.exports = function set_time($input, time_string_24hr) {\r\n  var twelveHr = convert_to_12hr_time(time_string_24hr)\r\n  $input.value = twelveHr\r\n  set_data_attribute($input, time_string_24hr)\r\n}\r\n","var get_values = require('../getters/get_values')\r\nvar set_segment = require('./set_segment')\r\n\r\nmodule.exports = function switch_mode($input, default_mode) {\r\n  default_mode = default_mode || 'AM'\r\n  var current_mode = get_values($input).mode\r\n  var new_mode = {\r\n    '--': default_mode,\r\n    AM: 'PM',\r\n    PM: 'AM',\r\n  }[current_mode]\r\n  set_segment($input, 'mode', new_mode)\r\n}\r\n","var switch_to_data_value = require('./switch_to_data_value')\r\nvar set_time = require('./set_time')\r\n\r\nmodule.exports = function switch_times($input, format) {\r\n  var is12hr = /\\s/.test($input.value)\r\n\r\n  if (format != 12 && format != 24) {\r\n    format = is12hr ? 24 : 12\r\n  }\r\n\r\n  var actions = {\r\n    12: function() {\r\n      if (!is12hr) {\r\n        set_time($input, $input.dataset.value)\r\n      }\r\n    },\r\n    24: function() {\r\n      if (is12hr) {\r\n        switch_to_data_value($input)\r\n      }\r\n    },\r\n  }\r\n  actions[format]()\r\n}\r\n","module.exports = function($input) {\r\n  var replacementVal = $input.dataset.value\r\n  $input.value = replacementVal\r\n}\r\n","var set_time = require('../setters/set_time')\r\n\r\nmodule.exports = function update_time($input) {\r\n  set_time($input, $input.value)\r\n  return $input\r\n}\r\n","var all_number_keys = [\r\n  // 0,  1,  2,  3,  4,  5,  6,  7,  8,  9\r\n    48, 49, 50, 51, 52, 53, 54, 55, 56, 57,\r\n    96, 97, 98, 99,100,101,102,103,104,105\r\n];\r\n\r\nmodule.exports = all_number_keys;\r\n","var named_keys = {\r\n  ArrowDown: 40,\r\n  ArrowRight: 39,\r\n  ArrowUp: 38,\r\n  ArrowLeft: 37,\r\n  Backspace: 8,\r\n  Delete: 46,\r\n  Tab: 9,\r\n  Shift: 16,\r\n  Escape: 27,\r\n  a: 65,\r\n  p: 80,\r\n}\r\n\r\nmodule.exports = named_keys\r\n","var ranges = {\r\n  hrs: { start: 0, end: 2 },\r\n  min: { start: 3, end: 5 },\r\n  mode: { start: 6, end: 8 },\r\n}\r\n\r\nmodule.exports = ranges\r\n","var ranges = require('./ranges')\r\n\r\nvar segments = Object.keys(ranges)\r\n\r\nmodule.exports = segments\r\n","var all_number_keys = require('./all_number_keys')\r\n\r\nvar sorted_number_keys = {}\r\n// sorted_number_keys = { 48: 0, 49: 1, 96: 0, 97: 1, ... };\r\nall_number_keys.forEach(function(key, index) {\r\n  var number_val = index > 9 ? index - 10 : index\r\n  sorted_number_keys[key] = number_val\r\n})\r\n\r\nmodule.exports = sorted_number_keys\r\n"],"sourceRoot":"/source/"}