{"version":3,"sources":["node_modules/browser-pack/_prelude.js","core/accessibility/create_a11y_block.js","index.js","core/accessibility/update_a11y.js","core/converters/convert_hours_to_12hr_time.js","core/converters/convert_number.js","core/converters/convert_to_12hr_time.js","core/converters/convert_to_24hr_time.js","core/converters/leading_zero.js","core/events/bind_events.js","core/events/create_event.js","core/events/handle_tab.js","core/events/trigger_both_events.js","core/events/trigger_event.js","core/getters/get_ancestors.js","core/getters/get_current_segment.js","core/getters/get_label.js","core/getters/get_selected_range.js","core/getters/get_values.js","core/helpers/manual_entry_log.js","core/helpers/prevent_user_select.js","core/helpers/values.js","core/selectors/next_segment.js","core/selectors/prev_segment.js","core/selectors/select_cursor_segment.js","core/selectors/select_segment.js","core/selectors/traverse.js","core/setters/apply_default.js","core/setters/clear_segment.js","core/setters/decrement.js","core/setters/decrement_current_segment.js","core/setters/increment.js","core/setters/increment_current_segment.js","core/setters/manual_number_entry.js","core/setters/nudge_time_segment.js","core/setters/reset.js","core/setters/set_data_attribute.js","core/setters/set_mode.js","core/setters/set_segment.js","core/setters/set_time.js","core/setters/switch_mode.js","core/setters/switch_times.js","core/setters/switch_to_data_value.js","core/setters/update_time.js","core/static-values/all_number_keys.js","core/static-values/named_keys.js","core/static-values/ranges.js","core/static-values/segments.js","core/static-values/sorted_number_keys.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$block","document","createElement","setAttribute","classList","add","querySelector","appendChild","2","get_current_segment","get_values","$input","announcementArray","setTimeout","current_segment","values","value","finalValue","segmentName","hrs","min","mode","announcements","initial","select","update","textArray","map","providedString","fullValue","replace","html","join","polyfill","label","$a11y","innerHTML","../getters/get_current_segment","../getters/get_values","3","hours","4","number","isNaN","parseInt","5","convert_number","convert_hours_to_12hr_time","leading_zero","timeString_24hr","twentyFour_regex","result","exec","hrs_24","hrs_12","isPM","./convert_hours_to_12hr_time","./convert_number","./leading_zero","6","timeString_12hr","test","newHrs","indexOf","timeResult","finalHrs","timeRegEx","7","purified","8","auto_swap","autoSwap","switch_times","select_segment","next_segment","prev_segment","select_cursor_segment","reset","manual_number_entry","clear_segment","increment_current_segment","decrement_current_segment","set_mode","handle_tab","all_number_keys","named_keys","update_a11y","prev_value","shiftKey","addEventListener","form","focused_via_click","current_value","dataset","preventDefault","segment","is_enter_key","which","is_number_key","is_named_key","is_arrow_key","ArrowDown","ArrowRight","ArrowUp","ArrowLeft","is_mode_key","is_delete_key","Delete","Backspace","Escape","Tab","../accessibility/update_a11y","../events/handle_tab","../helpers/values","../selectors/next_segment","../selectors/prev_segment","../selectors/select_cursor_segment","../selectors/select_segment","../setters/clear_segment","../setters/decrement_current_segment","../setters/increment_current_segment","../setters/manual_number_entry","../setters/reset","../setters/set_mode","../setters/switch_times","../static-values/all_number_keys","../static-values/named_keys","9","eventName","event","createEvent","initEvent","10","backwards_and_first","forwards_and_last","11","trigger_event","./trigger_event","12","can_trigger_change","create_event","inputEvent","changeEvent","input","change","dispatchEvent","./create_event","13","ancestors","push","parentNode","14","ranges","get_selected_range","selection","range","aboveMin","start","belowMax","end","../static-values/ranges","./get_selected_range","15","get_ancestors","$forLabel","id","$parentLabel","filter","$elem","nodeName","./get_ancestors","16","selectionStart","selectionEnd","17","timeString","regEx","../converters/convert_number","18","clear","manual_entry_log","entry","items","19","style","msUserSelect","mozUserSelect","webkitUserSelect","userSelect","20","obj","key_values","key","21","traverse","./traverse","22","23","./select_segment","24","set_input_type","type","setSelectionRange","actions","25","segments","direction","modifier","next_segment_index","next","prev","../helpers/manual_entry_log","../static-values/segments","26","set_data_attribute","trigger_both_events","../events/trigger_both_events","../setters/set_data_attribute","27","set_segment","./set_segment","28","switch_mode","nudge_time_segment","./nudge_time_segment","./switch_mode","29","decrement","../setters/decrement","30","31","increment","../setters/increment","32","sorted_number_keys","key_value","entry_count","upper_limits","limit","full_limit","full_entry","at_limit","../static-values/sorted_number_keys","33","time","current_values","current_time","Date","getHours","getMinutes","minutes","up","down","../converters/convert_hours_to_12hr_time","../converters/leading_zero","34","apply_default","./apply_default","35","convert_to_24hr_time","filteredString","time24hr","../converters/convert_to_24hr_time","36","37","newInputVal","./set_data_attribute","38","convert_to_12hr_time","time_string_24hr","twelveHr","../converters/convert_to_12hr_time","39","default_mode","current_mode","new_mode","--","AM","PM","40","switch_to_data_value","set_time","format","is12hr","./set_time","./switch_to_data_value","41","replacementVal","42","../setters/set_time","43","44","Shift","45","46","Object","keys","./ranges","47","forEach","index","number_val","./all_number_keys","48","TimePolyfill","prevent_user_select","accessibility_block_created","create_a11y_block","get_label","textContent","update_time","swap","forcedFormat","bind_events","window","./core/accessibility/create_a11y_block","./core/events/bind_events","./core/getters/get_label","./core/helpers/prevent_user_select","./core/setters/apply_default","./core/setters/set_data_attribute","./core/setters/switch_times","./core/setters/update_time"],"mappings":"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","file":"time-input-polyfill.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\r\nmodule.exports = function create_accessibility_block () {\r\n\tvar $block = document.createElement('div');\r\n\t$block.setAttribute('aria-live', 'assertive');\r\n\t$block.setAttribute('style', 'position: absolute; opacity: 0; height: 0; width: 0; overflow: hidden; pointer-events: none;');\r\n\t$block.classList.add('time-input-polyfill-accessibility-block');\r\n\tdocument.querySelector('body').appendChild($block);\r\n\treturn $block;\r\n}\r\n","\r\nvar prevent_user_select = require('./core/helpers/prevent_user_select');\r\nvar apply_default = require('./core/setters/apply_default');\r\nvar update_time = require('./core/setters/update_time');\r\nvar set_data_attribute = require('./core/setters/set_data_attribute');\r\nvar bind_events = require('./core/events/bind_events');\r\nvar switch_times = require('./core/setters/switch_times');\r\nvar get_label = require('./core/getters/get_label');\r\n\r\nvar create_a11y_block = require('./core/accessibility/create_a11y_block');\r\n\r\nvar accessibility_block_created = false;\r\nvar $a11y;\r\n\r\nfunction TimePolyfill($input) {\r\n\r\n\t$input.setAttribute('autocomplete','off');\r\n\r\n\tprevent_user_select($input);\r\n\r\n\t// Prevent screen reader from announcing the default stuff\r\n\t$input.setAttribute('aria-hidden', true);\r\n\r\n\tif (!accessibility_block_created) {\r\n\t\t$a11y = create_a11y_block();\r\n\t\taccessibility_block_created = true;\r\n\t}\r\n\r\n\tvar label = get_label($input).textContent;\r\n\r\n\t$input.polyfill = {\r\n\t\t$a11y: $a11y,\r\n\t\tlabel: label,\r\n\t\tautoSwap: true,\r\n\t\tupdate: function() {\r\n\t\t\tupdate_time($input);\r\n\t\t},\r\n\t\tswap: function(forcedFormat) {\r\n\t\t\tswitch_times($input, forcedFormat);\r\n\t\t}\r\n\t}\r\n\r\n\tif ($input.value === '' || /--/.test($input.value)) {\r\n\t\tapply_default($input);\r\n\t\tset_data_attribute($input, '');\r\n\t} else {\r\n\t\tupdate_time($input);\r\n\t\tset_data_attribute($input, $input.value);\r\n\t}\r\n\r\n\tbind_events($input);\r\n}\r\n\r\nif (window) window.TimePolyfill = TimePolyfill;\r\nif (module) module.exports = TimePolyfill;\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar get_values = require('../getters/get_values');\r\n\r\nmodule.exports = function update_a11y ($input, announcementArray) {\r\n\t// Timeout helps ensure that the input has stabilized\r\n\tsetTimeout(function(){\r\n\t\tvar current_segment = get_current_segment($input);\r\n\t\tvar values = get_values($input);\r\n\t\tvar value = values[current_segment];\r\n\t\tvar finalValue = value == '--' ? 'blank' : value;\r\n\r\n\t\tvar segmentName = {\r\n\t\t\thrs: 'Hours',\r\n\t\t\tmin: 'Minutes',\r\n\t\t\tmode: 'AM/PM'\r\n\t\t}[current_segment];\r\n\r\n\t\tvar announcements = {\r\n\t\t\tinitial: '$label grouping $fullValue.',\r\n\t\t\tselect: '$segmentName spin button $segmentValue.',\r\n\t\t\tupdate: '$segmentValue.',\r\n\t\t}\r\n\r\n\t\tvar textArray = announcementArray.map(function(providedString){\r\n\t\t\tif (announcements[providedString]) {\r\n\t\t\t\treturn announcements[providedString];\r\n\t\t\t}\r\n\t\t\treturn providedString;\r\n\t\t});\r\n\r\n\t\tvar fullValue = $input.value.replace(/--/g,'blank');\r\n\r\n\t\tvar html = '<p>' + textArray.join('</p><p>') + '</p>';\r\n\t\thtml = html.replace(/\\$label/g, $input.polyfill.label);\r\n\t\thtml = html.replace(/\\$segmentName/g, segmentName);\r\n\t\thtml = html.replace(/\\$segmentValue/g, finalValue);\r\n\t\thtml = html.replace(/\\$fullValue/g, fullValue);\r\n\r\n\t\t$input.polyfill.$a11y.innerHTML = html;\r\n\t}, 1);\r\n}\r\n","\r\nmodule.exports = function convert_hours_to_12hr_time (hours) {\r\n\treturn hours <= 12 ? hours === 0 ? 12 : hours : hours - 12;\r\n}\r\n","\r\nmodule.exports = function convert_number (number) {\r\n\treturn isNaN(number) ? number : parseInt(number);\r\n}\r\n","\r\nvar convert_number = require('./convert_number');\r\nvar convert_hours_to_12hr_time = require('./convert_hours_to_12hr_time');\r\nvar leading_zero = require('./leading_zero');\r\n\r\nmodule.exports = function convert_to_12hr_time (timeString_24hr) {\r\n\tif (timeString_24hr === '') return '--:-- --';\r\n\tvar twentyFour_regex = /([0-9]{2})\\:([0-9]{2})/;\r\n\tvar result = twentyFour_regex.exec(timeString_24hr);\r\n\tvar hrs_24 = convert_number(result[1]);\r\n\tvar min = result[2];\r\n\tvar hrs_12 = convert_hours_to_12hr_time(hrs_24);\r\n\tvar isPM = hrs_24 > 12;\r\n\tvar mode = isPM ? 'PM' : 'AM';\r\n\treturn [leading_zero(hrs_12), ':', min, ' ', mode].join('');\r\n}\r\n","\r\nvar leading_zero = require('./leading_zero');\r\n\r\nmodule.exports = function convert_to_24hr_time (timeString_12hr) {\r\n\tif (/-/.test(timeString_12hr)) return '';\r\n\tvar isPM = timeString_12hr.indexOf('PM') > -1;\r\n\tvar timeResult = /^([0-9]{2})/.exec(timeString_12hr);\r\n\tvar hrs = timeResult ? parseInt(timeResult[1]) : '';\r\n\tvar newHrs;\r\n\tif (hrs === 12) {\r\n\t\tnewHrs = isPM ? 12 : 00;\r\n\t} else {\r\n\t\tnewHrs = isPM ? hrs + 12 : hrs;\r\n\t}\r\n\tvar finalHrs = newHrs === 24 ? 0 : newHrs;\r\n\tvar timeRegEx = /^[0-9]{2}:([0-9]{2}) (AM|PM)/;\r\n\treturn timeString_12hr.replace(timeRegEx, leading_zero(finalHrs)+':$1');\r\n}\r\n","\r\nmodule.exports = function leading_zero (number) {\r\n\tif (isNaN(number)) return number;\r\n\tvar purified = parseInt(number);\r\n\treturn purified < 10 ? '0' + purified : number;\r\n}\r\n","\r\nvar values = require('../helpers/values');\r\n\r\nvar select_segment = require('../selectors/select_segment');\r\n\r\nvar next_segment = require('../selectors/next_segment');\r\nvar prev_segment = require('../selectors/prev_segment');\r\nvar select_cursor_segment = require('../selectors/select_cursor_segment');\r\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\n\r\nvar reset = require('../setters/reset');\r\nvar manual_number_entry = require('../setters/manual_number_entry');\r\nvar clear_segment = require('../setters/clear_segment');\r\nvar increment_current_segment = require('../setters/increment_current_segment');\r\nvar decrement_current_segment = require('../setters/decrement_current_segment');\r\nvar set_mode = require('../setters/set_mode');\r\nvar switch_times = require('../setters/switch_times');\r\n\r\nvar handle_tab = require('../events/handle_tab');\r\n\r\nvar all_number_keys = require('../static-values/all_number_keys');\r\nvar named_keys = require('../static-values/named_keys');\r\n\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function bind_events ($input) {\r\n\r\n\tvar prev_value = '';\r\n\r\n\tvar shiftKey = false;\r\n\r\n\tdocument.addEventListener('keydown', function(e){\r\n\t\tshiftKey = e.shiftKey;\r\n\t})\r\n\tdocument.addEventListener('keyup', function(e){\r\n\t\tshiftKey = e.shiftKey;\r\n\t})\r\n\r\n\tif ($input.form) {\r\n\t\t$input.form.addEventListener('submit', function(){\r\n\t\t\tauto_swap($input);\r\n\t\t})\r\n\t}\r\n\r\n\tvar focused_via_click = false;\r\n\r\n\t$input.addEventListener('mousedown', function(){\r\n\t\tfocused_via_click = true;\r\n\t});\r\n\r\n\t// Turns the IE clear button into a reset button\r\n\t$input.addEventListener('mouseup', function(){\r\n\t\tsetTimeout(function(){\r\n\t\t\tif ($input.value === '') reset($input);\r\n\t\t}, 1)\r\n\t});\r\n\r\n\t$input.addEventListener('click', function(e){\r\n\t\tselect_cursor_segment($input);\r\n\t});\r\n\r\n\t$input.addEventListener('blur', function(){\r\n\t\tvar current_value = $input.dataset.value;\r\n\t\tif (current_value !== prev_value) {\r\n\t\t\tprev_value = current_value;\r\n\t\t}\r\n\t\tfocused_via_click = false;\r\n\t});\r\n\r\n\t$input.addEventListener('focus', function(e){\r\n\t\tif (!focused_via_click) {\r\n\t\t\te.preventDefault();\r\n\t\t\tvar segment = shiftKey ? 'mode' : 'hrs';\r\n\t\t\tselect_segment($input, segment);\r\n\t\t}\r\n\t\tupdate_a11y($input, [\r\n\t\t\t'initial',\r\n\t\t\t'select'\r\n\t\t])\r\n\t});\r\n\r\n\t$input.addEventListener('keydown', function(e) {\r\n\t\tvar is_enter_key = e.which === 13;\r\n\t\tif (is_enter_key) return true;\r\n\r\n\t\tvar is_number_key = all_number_keys.indexOf(e.which) > -1;\r\n\t\tvar is_named_key = values(named_keys).indexOf(e.which) > -1;\r\n\t\tvar is_arrow_key = [named_keys.ArrowDown, named_keys.ArrowRight, named_keys.ArrowUp, named_keys.ArrowLeft].indexOf(e.which) > -1;\r\n\t\tvar is_mode_key = [named_keys.a, named_keys.p].indexOf(e.which) > -1;\r\n\t\tvar is_delete_key = [named_keys.Delete, named_keys.Backspace].indexOf(e.which) > -1;\r\n\r\n\t\tif (!is_named_key || is_arrow_key || is_number_key || is_mode_key || is_delete_key) { e.preventDefault(); }\r\n\r\n\t\tif (is_number_key) {\r\n\t\t\tmanual_number_entry($input, e.which);\r\n\t\t}\r\n\r\n\t\tif (is_delete_key) {\r\n\t\t\tvar segment = get_current_segment($input);\r\n\t\t\tclear_segment($input, segment);\r\n\t\t}\r\n\r\n\t\tswitch (e.which) {\r\n\t\t\tcase named_keys.ArrowRight: next_segment($input); break;\r\n\t\t\tcase named_keys.ArrowLeft:  prev_segment($input); break;\r\n\t\t\tcase named_keys.ArrowUp:    increment_current_segment($input); break;\r\n\t\t\tcase named_keys.ArrowDown:  decrement_current_segment($input); break;\r\n\t\t\tcase named_keys.Escape:     reset($input); break;\r\n\t\t\tcase named_keys.a:          set_mode($input, 'AM'); break;\r\n\t\t\tcase named_keys.p:          set_mode($input, 'PM'); break;\r\n\t\t\tcase named_keys.Tab:        handle_tab($input, e); break;\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction auto_swap($input) {\r\n\tif ($input.polyfill.autoSwap) {\r\n\t\tswitch_times($input, 24);\r\n\t\tsetTimeout(function(){\r\n\t\t\tswitch_times($input, 12);\r\n\t\t}, 1);\r\n\t}\r\n}\r\n","\r\nmodule.exports = function create_event(eventName){\r\n\tvar event = document.createEvent('Event');\r\n\tevent.initEvent(eventName, true, true);\r\n\treturn event;\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar prev_segment = require('../selectors/prev_segment');\r\nvar next_segment = require('../selectors/next_segment');\r\n\r\nmodule.exports = function handle_tab($input, e) {\r\n\tvar current_segment = get_current_segment($input);\r\n\tvar backwards_and_first = e.shiftKey && current_segment === 'hrs';\r\n\tvar forwards_and_last = !e.shiftKey && current_segment === 'mode';\r\n\r\n\tif (!backwards_and_first && !forwards_and_last) {\r\n\t\te.preventDefault();\r\n\t\tif (e.shiftKey) {\r\n\t\t\tprev_segment($input);\r\n\t\t} else {\r\n\t\t\tnext_segment($input);\r\n\t\t}\r\n\t}\r\n}\r\n","\r\nvar trigger_event = require('./trigger_event');\r\n\r\n// It seems that oninput and onchange are treated the same way by browsers :/\r\nmodule.exports = function trigger_both_events($input) {\r\n\t// the event only ever fires if there is a full valid value available\r\n\ttrigger_event($input, 'input');\r\n\ttrigger_event($input,'change');\r\n}\r\n","\r\nvar create_event = require('./create_event');\r\n\r\nvar inputEvent = create_event('input');\r\nvar changeEvent = create_event('change');\r\n\r\nmodule.exports = function trigger_event($input, eventName) {\r\n\tvar event = {\r\n\t\tinput: inputEvent,\r\n\t\tchange: changeEvent,\r\n\t}[eventName];\r\n\r\n\tif (can_trigger_change($input)) {\r\n\t\t$input.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\n// Browsers only send out input and change events if the time element has a full valid value\r\nfunction can_trigger_change ($input) {\r\n\treturn !/--/.test($input.value);\r\n}\r\n","\r\nmodule.exports = function ($input) {\r\n\tvar a = $input;\r\n\r\n\t// https://stackoverflow.com/a/8729274/1611058\r\n\tvar ancestors = [];\r\n\twhile (a) {\r\n\t\tancestors.push(a);\r\n\t\ta = a.parentNode;\r\n\t}\r\n\r\n\treturn ancestors;\r\n}\r\n","\r\nvar ranges = require('../static-values/ranges');\r\nvar get_selected_range = require('./get_selected_range');\r\n\r\nmodule.exports = function get_current_segment ($input) {\r\n\tvar selection = get_selected_range($input);\r\n\tfor (var segment in ranges) {\r\n\t\tvar range = ranges[segment];\r\n\t\tvar aboveMin = range.start <= selection.start;\r\n\t\tvar belowMax = range.end >= selection.end;\r\n\t\tif (aboveMin && belowMax) {\r\n\t\t\treturn segment;\r\n\t\t}\r\n\t}\r\n\treturn 'hrs';\r\n}\r\n","\r\nvar get_ancestors = require('./get_ancestors');\r\n\r\nmodule.exports = function get_label ($input) {\r\n\tvar $forLabel = document.querySelector('label[for=\"'+$input.id+'\"]');\r\n\tif ($forLabel) return $forLabel;\r\n\r\n\tvar ancestors = get_ancestors($input);\r\n\tvar $parentLabel = ancestors.filter(function($elem){\r\n\t\treturn $elem.nodeName === 'LABEL';\r\n\t})[0];\r\n\treturn $parentLabel;\r\n}\r\n","\r\nmodule.exports = function get_selected_range ($input) {\r\n\treturn { start: $input.selectionStart, end: $input.selectionEnd };\r\n}\r\n","\r\nvar convert_number = require('../converters/convert_number');\r\n\r\nmodule.exports = function get_values ($input, timeString) {\r\n\tvar value = timeString ? timeString : $input.value;\r\n\tvar regEx = /([0-9-]{1,2})\\:([0-9-]{1,2})\\s?(AM|PM|\\-\\-)?/;\r\n\tvar result = regEx.exec(value);\r\n\r\n\treturn {\r\n\t\thrs: convert_number(result[1]),\r\n\t\tmin: convert_number(result[2]),\r\n\t\tmode: result[3],\r\n\t}\r\n}\r\n","\r\nvar manual_entry_log = [];\r\n\r\nfunction clear () {\r\n\tmanual_entry_log = [];\r\n}\r\n\r\nfunction add (entry) {\r\n\tmanual_entry_log.push(entry);\r\n}\r\n\r\nfunction items(){\r\n\treturn manual_entry_log;\r\n}\r\n\r\nmodule.exports = {\r\n\titems: items,\r\n\tclear: clear,\r\n\tadd: add,\r\n}\r\n","\r\nmodule.exports = function prevent_user_select ($input) {\r\n\t$input.style.msUserSelect = \"none\";\r\n\t$input.style.mozUserSelect = \"none\";\r\n\t$input.style.webkitUserSelect = \"none\";\r\n\t$input.style.userSelect = \"none\";\r\n}\r\n","\r\n// IE11 doesn't support Object.values()\r\nmodule.exports = function values (obj) {\r\n\tvar key_values = [];\r\n\tfor (var key in obj) {\r\n\t\tkey_values.push(obj[key]);\r\n\t}\r\n\treturn key_values;\r\n}\r\n","\r\nvar traverse = require('./traverse');\r\n\r\nmodule.exports = function next_segment ($input) {\r\n\ttraverse($input, 'next');\r\n}\r\n","\r\nvar traverse = require('./traverse');\r\n\r\nmodule.exports = function prev_segment ($input) {\r\n\ttraverse($input, 'prev');\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar select_segment = require('./select_segment');\r\n\r\nmodule.exports = function select_cursor_segment ($input) {\r\n\tvar current_segment = get_current_segment($input);\r\n\tselect_segment($input, current_segment);\r\n}\r\n","\r\nmodule.exports = function select_segment ($input, segment) {\r\n\r\n\tset_input_type();\r\n\r\n\tvar actions = {\r\n\t\thrs:  select(0, 2),\r\n\t\tmin:  select(3, 5),\r\n\t\tmode: select(6, 8),\r\n\t};\r\n\r\n\tactions[segment]($input);\r\n\r\n\tfunction set_input_type() {\r\n\t\tvar type = segment === 'mode' ? 'text' : 'tel';\r\n\t\t$input.setAttribute('type', type);\r\n\t}\r\n\r\n\tfunction select (start, end) {\r\n\t\treturn function () {\r\n\t\t\t$input.setSelectionRange(start, end);\r\n\t\t}\r\n\t}\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar select_segment = require('../selectors/select_segment');\r\n\r\nvar manual_entry_log = require('../helpers/manual_entry_log');\r\nvar segments = require('../static-values/segments');\r\n\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function traverse ($input, direction) {\r\n\tvar segment = get_current_segment($input);\r\n\r\n\tvar modifier = direction === 'next' ? 1 : -1;\r\n\tvar next_segment_index = segments.indexOf(segment) + modifier;\r\n\r\n\tvar next_segment = {\r\n\t\tnext: segments[next_segment_index] || 'mode',\r\n\t\tprev: next_segment_index < 0 ? 'hrs' : segments[next_segment_index],\r\n\t}[direction];\r\n\r\n\tselect_segment($input, next_segment);\r\n\tmanual_entry_log.clear();\r\n\tupdate_a11y($input, ['select'])\r\n}\r\n","\r\n// I need to keep this separate from reset so that\r\n// I can reset without attracting focus\r\n\r\nvar set_data_attribute = require('../setters/set_data_attribute');\r\nvar trigger_both_events = require('../events/trigger_both_events');\r\n\r\nmodule.exports = function apply_default ($input) {\r\n\t$input.value = '--:-- --';\r\n\tset_data_attribute($input, '');\r\n\ttrigger_both_events($input);\r\n}\r\n","\r\nvar set_segment = require('./set_segment');\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function clear_segment ($input, segment) {\r\n\tset_segment($input, segment, '--');\r\n\tupdate_a11y($input, ['update']);\r\n}\r\n","\r\nvar switch_mode = require('./switch_mode');\r\nvar nudge_time_segment = require('./nudge_time_segment');\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function decrement ($input, segment) {\r\n\tif (segment === 'mode') {\r\n\t\tswitch_mode($input, 'PM')\r\n\t} else {\r\n\t\tnudge_time_segment($input, segment, 'down');\r\n\t}\r\n\tupdate_a11y($input, ['update']);\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar decrement = require('../setters/decrement');\r\n\r\nmodule.exports = function decrement_current_segment ($input){\r\n\tvar current_segment = get_current_segment($input);\r\n\tdecrement($input, current_segment);\r\n}\r\n","\r\nvar switch_mode = require('./switch_mode');\r\nvar nudge_time_segment = require('./nudge_time_segment');\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function increment ($input, segment) {\r\n\tif (segment === 'mode') {\r\n\t\tswitch_mode($input, 'AM')\r\n\t} else {\r\n\t\tnudge_time_segment($input, segment, 'up');\r\n\t}\r\n\tupdate_a11y($input, ['update']);\r\n}\r\n\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar increment = require('../setters/increment');\r\n\r\nmodule.exports = function increment_current_segment ($input) {\r\n\tvar current_segment = get_current_segment($input);\r\n\tincrement($input, current_segment);\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar set_segment = require('./set_segment');\r\nvar next_segment = require('../selectors/next_segment');\r\n\r\nvar manual_entry_log = require('../helpers/manual_entry_log');\r\nvar sorted_number_keys = require('../static-values/sorted_number_keys');\r\n\r\nmodule.exports = function manual_number_entry($input, key) {\r\n\tvar key_value = sorted_number_keys[key];\r\n\tvar segment = get_current_segment($input);\r\n\r\n\tif (segment !== 'mode') {\r\n\t\tvar entry_count = manual_entry_log.items().length;\r\n\r\n\t\tvar upper_limits = {\r\n\t\t\thrs: [1,2],\r\n\t\t\tmin: [5,9],\r\n\t\t}\r\n\t\tvar limit = upper_limits[segment][entry_count];\r\n\r\n\t\tif (entry_count < 2) {\r\n\t\t\tmanual_entry_log.add(key_value);\r\n\t\t}\r\n\r\n\t\tvar full_limit = parseInt(upper_limits[segment].join(''));\r\n\t\tvar full_entry = parseInt(manual_entry_log.items().join(''));\r\n\r\n\t\tif (full_limit >= full_entry) {\r\n\t\t\tset_segment($input, segment, full_entry);\r\n\t\t}\r\n\r\n\t\tvar at_limit = key_value > limit || manual_entry_log.items().length === 2;\r\n\r\n\t\tif (at_limit) {\r\n\t\t\tnext_segment($input);\r\n\t\t}\r\n\t}\r\n}\r\n","\r\nvar get_values = require('../getters/get_values');\r\nvar convert_hours_to_12hr_time = require('../converters/convert_hours_to_12hr_time');\r\nvar leading_zero = require('../converters/leading_zero');\r\nvar set_segment = require('./set_segment');\r\n\r\nmodule.exports = function nudge_time_segment ($input, segment, direction) {\r\n\tvar current_values = get_values($input);\r\n\tvar time;\r\n\r\n\tvar modifier = direction === 'up' ? 1 : -1;\r\n\r\n\tif (current_values[segment] === '--') {\r\n\t\tvar current_time = new Date();\r\n\t\ttime = {\r\n\t\t\thrs: convert_hours_to_12hr_time(current_time.getHours()),\r\n\t\t\tmin: current_time.getMinutes(),\r\n\t\t}\r\n\t} else {\r\n\t\tvar minutes = {\r\n\t\t\tup : current_values.min < 59 ? current_values.min + modifier : 0,\r\n\t\t\tdown : current_values.min === 0 ? 59 : current_values.min + modifier,\r\n\t\t}\r\n\t\ttime = {\r\n\t\t\thrs: convert_hours_to_12hr_time(current_values.hrs + modifier),\r\n\t\t\tmin: minutes[direction],\r\n\t\t}\r\n\t}\r\n\r\n\tset_segment($input, segment, leading_zero(time[segment]) );\r\n}\r\n","\r\nvar apply_default = require('./apply_default');\r\nvar select_segment = require('../selectors/select_segment');\r\n\r\nmodule.exports = function reset ($input) {\r\n\tapply_default($input);\r\n\tselect_segment($input, 'hrs');\r\n}\r\n","\r\nvar convert_to_24hr_time = require('../converters/convert_to_24hr_time')\r\n\r\nmodule.exports = function set_data_attribute($input, timeString_12hr){\r\n\tvar filteredString = timeString_12hr.indexOf('-') > -1 ? '' : timeString_12hr;\r\n\tvar time24hr = convert_to_24hr_time(filteredString);\r\n\t$input.setAttribute('data-value', time24hr);\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar set_segment = require('./set_segment');\r\n\r\nmodule.exports = function set_mode ($input, type) {\r\n\tvar segment = get_current_segment($input);\r\n\tif (segment === 'mode') {\r\n\t\tset_segment($input, segment, type);\r\n\t}\r\n}\r\n","\r\nvar get_values = require('../getters/get_values');\r\nvar leading_zero = require('../converters/leading_zero');\r\nvar select_segment = require('../selectors/select_segment');\r\nvar set_data_attribute = require('./set_data_attribute');\r\nvar trigger_both_events = require('../events/trigger_both_events');\r\n\r\nmodule.exports = function set_segment ($input, segment, value) {\r\n\tvar values = get_values($input);\r\n\tvalues[segment] = value;\r\n\tvar newInputVal = [\r\n\t\tleading_zero(values.hrs),':',\r\n\t\tleading_zero(values.min),' ',\r\n\t\tvalues.mode\r\n\t].join('');\r\n\t$input.value = newInputVal;\r\n\tselect_segment($input, segment);\r\n\tset_data_attribute($input, newInputVal);\r\n\ttrigger_both_events($input);\r\n}\r\n","\r\nvar convert_to_12hr_time = require('../converters/convert_to_12hr_time');\r\nvar set_data_attribute = require('../setters/set_data_attribute');\r\n\r\nmodule.exports = function set_time($input, time_string_24hr) {\r\n\tvar twelveHr = convert_to_12hr_time(time_string_24hr);\r\n\t$input.value = twelveHr;\r\n\tset_data_attribute($input, time_string_24hr);\r\n}\r\n","\r\nvar get_values = require('../getters/get_values');\r\nvar set_segment = require('./set_segment');\r\n\r\nmodule.exports = function switch_mode ($input, default_mode) {\r\n\tdefault_mode = default_mode || 'AM';\r\n\tvar current_mode = get_values($input).mode;\r\n\tvar new_mode = {\r\n\t\t'--' : default_mode,\r\n\t\t'AM' : 'PM',\r\n\t\t'PM' : 'AM',\r\n\t}[current_mode];\r\n\tset_segment($input, 'mode', new_mode);\r\n}\r\n","\r\nvar switch_to_data_value = require('./switch_to_data_value');\r\nvar set_time = require('./set_time');\r\n\r\nmodule.exports = function switch_times ($input, format) {\r\n\tvar is12hr = /\\s/.test($input.value);\r\n\r\n\tif (format != 12 && format != 24) {\r\n\t\tformat = is12hr ? 24 : 12;\r\n\t}\r\n\r\n\tvar actions = {\r\n\t\t12: function(){\r\n\t\t\tif (!is12hr) {\r\n\t\t\t\tset_time($input, $input.dataset.value);\r\n\t\t\t}\r\n\t\t},\r\n\t\t24: function(){\r\n\t\t\tif (is12hr) {\r\n\t\t\t\tswitch_to_data_value($input);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tactions[format]();\r\n}\r\n","\r\nmodule.exports = function($input) {\r\n\tvar replacementVal = $input.dataset.value;\r\n\t$input.value = replacementVal;\r\n}\r\n","\r\nvar set_time = require('../setters/set_time');\r\n\r\nmodule.exports = function update_time($input) {\r\n\tset_time($input, $input.value);\r\n\treturn $input;\r\n}\r\n","var all_number_keys = [\r\n  // 0,  1,  2,  3,  4,  5,  6,  7,  8,  9\r\n    48, 49, 50, 51, 52, 53, 54, 55, 56, 57,\r\n    96, 97, 98, 99,100,101,102,103,104,105\r\n];\r\n\r\nmodule.exports = all_number_keys;\r\n","var named_keys = {\r\n\tArrowDown: 40,\r\n\tArrowRight: 39,\r\n\tArrowUp: 38,\r\n\tArrowLeft: 37,\r\n\tBackspace: 8,\r\n\tDelete: 46,\r\n\tTab: 9,\r\n\tShift: 16,\r\n\tEscape: 27,\r\n\ta: 65,\r\n\tp: 80,\r\n}\r\n\r\nmodule.exports = named_keys;\r\n","\r\nvar ranges = {\r\n\thrs : { start: 0, end: 2 },\r\n\tmin : { start: 3, end: 5 },\r\n\tmode : { start: 6, end: 8 },\r\n}\r\n\r\nmodule.exports = ranges;\r\n","\r\nvar ranges = require('./ranges');\r\n\r\nvar segments = Object.keys(ranges);\r\n\r\nmodule.exports = segments;\r\n","\r\nvar all_number_keys = require('./all_number_keys');\r\n\r\nvar sorted_number_keys = {};\r\n// sorted_number_keys = { 48: 0, 49: 1, 96: 0, 97: 1, ... };\r\nall_number_keys.forEach(function(key, index) {\r\n\tvar number_val = index > 9 ? index - 10 : index;\r\n\tsorted_number_keys[key] = number_val;\r\n});\r\n\r\nmodule.exports = sorted_number_keys;\r\n"],"sourceRoot":"/source/"}