{"version":3,"sources":["src/_scripts/node_modules/browser-pack/_prelude.js","src/_scripts/core/accessibility/create_a11y_block.js","src/_scripts/main.js","src/_scripts/core/accessibility/update_a11y.js","src/_scripts/core/converters/convert_hours_to_12hr_time.js","src/_scripts/core/converters/convert_number.js","src/_scripts/core/converters/convert_to_12hr_time.js","src/_scripts/core/converters/convert_to_24hr_time.js","src/_scripts/core/converters/leading_zero.js","src/_scripts/core/converters/toArray.js","src/_scripts/core/events/bind_events.js","src/_scripts/core/events/create_event.js","src/_scripts/core/events/handle_tab.js","src/_scripts/core/events/trigger_both_events.js","src/_scripts/core/events/trigger_event.js","src/_scripts/core/getters/get_ancestors.js","src/_scripts/core/getters/get_current_segment.js","src/_scripts/core/getters/get_label.js","src/_scripts/core/getters/get_selected_range.js","src/_scripts/core/getters/get_values.js","src/_scripts/core/helpers/manual_entry_log.js","src/_scripts/core/helpers/values.js","src/_scripts/core/selectors/_$$.js","src/_scripts/core/selectors/next_segment.js","src/_scripts/core/selectors/prev_segment.js","src/_scripts/core/selectors/select_cursor_segment.js","src/_scripts/core/selectors/select_segment.js","src/_scripts/core/selectors/traverse.js","src/_scripts/core/setters/apply_default.js","src/_scripts/core/setters/clear_segment.js","src/_scripts/core/setters/decrement.js","src/_scripts/core/setters/decrement_current_segment.js","src/_scripts/core/setters/increment.js","src/_scripts/core/setters/increment_current_segment.js","src/_scripts/core/setters/manual_number_entry.js","src/_scripts/core/setters/nudge_time_segment.js","src/_scripts/core/setters/reset.js","src/_scripts/core/setters/set_data_attribute.js","src/_scripts/core/setters/set_mode.js","src/_scripts/core/setters/set_segment.js","src/_scripts/core/setters/set_time.js","src/_scripts/core/setters/switch_mode.js","src/_scripts/core/setters/switch_times.js","src/_scripts/core/setters/switch_to_data_value.js","src/_scripts/core/setters/update_time.js","src/_scripts/core/static-values/all_number_keys.js","src/_scripts/core/static-values/named_keys.js","src/_scripts/core/static-values/ranges.js","src/_scripts/core/static-values/segments.js","src/_scripts/core/static-values/sorted_number_keys.js","src/_scripts/index.js","src/_scripts/src/_modules/result/result.js","src/_scripts/src/_scripts/_helpers/gtag.js","src/_scripts/src/_scripts/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$block","document","createElement","setAttribute","classList","add","querySelector","appendChild","2","get_current_segment","get_values","$input","announcementArray","setTimeout","current_segment","values","value","finalValue","segmentName","hrs","min","mode","announcements","initial","select","update","textArray","map","providedString","fullValue","replace","html","join","polyfill","label","$a11y","innerHTML","../getters/get_current_segment","../getters/get_values","3","hours","4","number","isNaN","parseInt","5","convert_number","convert_hours_to_12hr_time","leading_zero","timeString_24hr","twentyFour_regex","result","exec","hrs_24","hrs_12","isPM","./convert_hours_to_12hr_time","./convert_number","./leading_zero","6","timeString_12hr","test","newHrs","indexOf","timeResult","finalHrs","timeRegEx","7","purified","8","array","Array","prototype","slice","9","auto_swap","autoSwap","switch_times","select_segment","next_segment","prev_segment","select_cursor_segment","reset","manual_number_entry","clear_segment","increment_current_segment","decrement_current_segment","set_mode","handle_tab","all_number_keys","named_keys","update_a11y","prev_value","shiftKey","addEventListener","form","focused_via_click","current_value","dataset","preventDefault","segment","is_enter_key","which","is_number_key","is_named_key","is_arrow_key","ArrowDown","ArrowRight","ArrowUp","ArrowLeft","is_mode_key","is_delete_key","Delete","Backspace","Escape","Tab","../accessibility/update_a11y","../events/handle_tab","../helpers/values","../selectors/next_segment","../selectors/prev_segment","../selectors/select_cursor_segment","../selectors/select_segment","../setters/clear_segment","../setters/decrement_current_segment","../setters/increment_current_segment","../setters/manual_number_entry","../setters/reset","../setters/set_mode","../setters/switch_times","../static-values/all_number_keys","../static-values/named_keys","10","eventName","event","createEvent","initEvent","11","backwards_and_first","forwards_and_last","12","trigger_event","./trigger_event","13","can_trigger_change","create_event","inputEvent","changeEvent","input","change","dispatchEvent","./create_event","14","selectorString","$elem","ancestors","push","matchesSelector","msMatchesSelector","matches","parentElement","15","ranges","get_selected_range","selection","range","aboveMin","start","belowMax","end","../static-values/ranges","./get_selected_range","16","aria_labelledby","ariaLabelByID","getAttribute","$ariaLabelBy","getElementById","textContent","aria_label","ariaLabel","for_attribute","id","$forLabel","label_wrapper_element","get_ancestors","$parentLabel","nodeName","title_attribute","titleLabel","labelText","console","error","./get_ancestors","17","selectionStart","selectionEnd","18","timeString","regEx","../converters/convert_number","19","clear","manual_entry_log","entry","items","20","obj","key_values","key","21","toArray","selector","elements","querySelectorAll","../converters/toArray","22","traverse","./traverse","23","24","./select_segment","25","set_input_type","type","setSelectionRange","actions","26","segments","direction","modifier","next_segment_index","next","prev","../helpers/manual_entry_log","../static-values/segments","27","set_data_attribute","trigger_both_events","../events/trigger_both_events","../setters/set_data_attribute","28","set_segment","./set_segment","29","switch_mode","nudge_time_segment","./nudge_time_segment","./switch_mode","30","decrement","../setters/decrement","31","32","increment","../setters/increment","33","sorted_number_keys","key_value","entry_count","upper_limits","limit","full_limit","full_entry","at_limit","../static-values/sorted_number_keys","34","time","current_values","current_time","Date","getHours","getMinutes","minutes","up","down","../converters/convert_hours_to_12hr_time","../converters/leading_zero","35","apply_default","./apply_default","36","convert_to_24hr_time","filteredString","time24hr","../converters/convert_to_24hr_time","37","38","newInputVal","./set_data_attribute","39","convert_to_12hr_time","time_string_24hr","twelveHr","../converters/convert_to_12hr_time","40","default_mode","current_mode","new_mode","--","AM","PM","41","switch_to_data_value","set_time","format","is12hr","./set_time","./switch_to_data_value","42","replacementVal","43","../setters/set_time","44","45","Shift","46","47","Object","keys","./ranges","48","forEach","index","number_val","./all_number_keys","49","TimePolyfill","accessibility_block_created","create_a11y_block","get_label","update_time","swap","forcedFormat","bind_events","window","./core/accessibility/create_a11y_block","./core/events/bind_events","./core/getters/get_label","./core/setters/apply_default","./core/setters/set_data_attribute","./core/setters/switch_times","./core/setters/update_time","50","$result","$list","$close","onclick","remove","51","action","categoryLabelValue","gtag","event_category","event_label","data","category","log","52","_$$","ga","$$timeInputs","element","oninput","onchange","onsubmit","get_labels","labelList","children","$label","labels","valuesList","this","focus","../../core/converters/toArray","../../core/selectors/_$$","../../index","../_modules/result/result","./_helpers/gtag"],"mappings":"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","file":"scripts/main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\r\nmodule.exports = function create_accessibility_block () {\r\n\tvar $block = document.createElement('div');\r\n\t$block.setAttribute('aria-live', 'assertive');\r\n\t$block.setAttribute('style', 'position: absolute; opacity: 0; height: 0; width: 0; overflow: hidden; pointer-events: none;');\r\n\t$block.classList.add('time-input-polyfill-accessibility-block');\r\n\tdocument.querySelector('body').appendChild($block);\r\n\treturn $block;\r\n}\r\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\r\nmodule.exports = function create_accessibility_block () {\r\n\tvar $block = document.createElement('div');\r\n\t$block.setAttribute('aria-live', 'assertive');\r\n\t$block.setAttribute('style', 'position: absolute; opacity: 0; height: 0; width: 0; overflow: hidden; pointer-events: none;');\r\n\t$block.classList.add('time-input-polyfill-accessibility-block');\r\n\tdocument.querySelector('body').appendChild($block);\r\n\treturn $block;\r\n}\r\n\n},{}],2:[function(require,module,exports){\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar get_values = require('../getters/get_values');\r\n\r\nmodule.exports = function update_a11y ($input, announcementArray) {\r\n\t// Timeout helps ensure that the input has stabilized\r\n\tsetTimeout(function(){\r\n\t\tvar current_segment = get_current_segment($input);\r\n\t\tvar values = get_values($input);\r\n\t\tvar value = values[current_segment];\r\n\t\tvar finalValue = value == '--' ? 'blank' : value;\r\n\r\n\t\tvar segmentName = {\r\n\t\t\thrs: 'Hours',\r\n\t\t\tmin: 'Minutes',\r\n\t\t\tmode: 'AM/PM'\r\n\t\t}[current_segment];\r\n\r\n\t\tvar announcements = {\r\n\t\t\tinitial: '$label grouping $fullValue.',\r\n\t\t\tselect: '$segmentName spin button $segmentValue.',\r\n\t\t\tupdate: '$segmentValue.',\r\n\t\t}\r\n\r\n\t\tvar textArray = announcementArray.map(function(providedString){\r\n\t\t\tif (announcements[providedString]) {\r\n\t\t\t\treturn announcements[providedString];\r\n\t\t\t}\r\n\t\t\treturn providedString;\r\n\t\t});\r\n\r\n\t\tvar fullValue = $input.value.replace(/--/g,'blank');\r\n\r\n\t\tvar html = '<p>' + textArray.join('</p><p>') + '</p>';\r\n\t\thtml = html.replace(/\\$label/g, $input.polyfill.label);\r\n\t\thtml = html.replace(/\\$segmentName/g, segmentName);\r\n\t\thtml = html.replace(/\\$segmentValue/g, finalValue);\r\n\t\thtml = html.replace(/\\$fullValue/g, fullValue);\r\n\r\n\t\t$input.polyfill.$a11y.innerHTML = html;\r\n\t}, 1);\r\n}\r\n\n},{\"../getters/get_current_segment\":15,\"../getters/get_values\":18}],3:[function(require,module,exports){\n\r\nmodule.exports = function convert_hours_to_12hr_time (hours) {\r\n\treturn hours <= 12 ? hours === 0 ? 12 : hours : hours - 12;\r\n}\r\n\n},{}],4:[function(require,module,exports){\n\r\nmodule.exports = function convert_number (number) {\r\n\treturn isNaN(number) ? number : parseInt(number);\r\n}\r\n\n},{}],5:[function(require,module,exports){\n\r\nvar convert_number = require('./convert_number');\r\nvar convert_hours_to_12hr_time = require('./convert_hours_to_12hr_time');\r\nvar leading_zero = require('./leading_zero');\r\n\r\nmodule.exports = function convert_to_12hr_time (timeString_24hr) {\r\n\tif (timeString_24hr === '') return '--:-- --';\r\n\tvar twentyFour_regex = /([0-9]{2})\\:([0-9]{2})/;\r\n\tvar result = twentyFour_regex.exec(timeString_24hr);\r\n\tvar hrs_24 = convert_number(result[1]);\r\n\tvar min = result[2];\r\n\tvar hrs_12 = convert_hours_to_12hr_time(hrs_24);\r\n\tvar isPM = hrs_24 > 12;\r\n\tvar mode = isPM ? 'PM' : 'AM';\r\n\treturn [leading_zero(hrs_12), ':', min, ' ', mode].join('');\r\n}\r\n\n},{\"./convert_hours_to_12hr_time\":3,\"./convert_number\":4,\"./leading_zero\":7}],6:[function(require,module,exports){\n\r\nvar leading_zero = require('./leading_zero');\r\n\r\nmodule.exports = function convert_to_24hr_time (timeString_12hr) {\r\n\tif (/-/.test(timeString_12hr)) return '';\r\n\tvar isPM = timeString_12hr.indexOf('PM') > -1;\r\n\tvar timeResult = /^([0-9]{2})/.exec(timeString_12hr);\r\n\tvar hrs = timeResult ? parseInt(timeResult[1]) : '';\r\n\tvar newHrs;\r\n\tif (hrs === 12) {\r\n\t\tnewHrs = isPM ? 12 : 00;\r\n\t} else {\r\n\t\tnewHrs = isPM ? hrs + 12 : hrs;\r\n\t}\r\n\tvar finalHrs = newHrs === 24 ? 0 : newHrs;\r\n\tvar timeRegEx = /^[0-9]{2}:([0-9]{2}) (AM|PM)/;\r\n\treturn timeString_12hr.replace(timeRegEx, leading_zero(finalHrs)+':$1');\r\n}\r\n\n},{\"./leading_zero\":7}],7:[function(require,module,exports){\n\r\nmodule.exports = function leading_zero (number) {\r\n\tif (isNaN(number)) return number;\r\n\tvar purified = parseInt(number);\r\n\treturn purified < 10 ? '0' + purified : number;\r\n}\r\n\n},{}],8:[function(require,module,exports){\n\r\nmodule.exports = function(array){\r\n\treturn Array.prototype.slice.call(array, 0);\r\n}\r\n\n},{}],9:[function(require,module,exports){\n\r\nvar values = require('../helpers/values');\r\n\r\nvar select_segment = require('../selectors/select_segment');\r\n\r\nvar next_segment = require('../selectors/next_segment');\r\nvar prev_segment = require('../selectors/prev_segment');\r\nvar select_cursor_segment = require('../selectors/select_cursor_segment');\r\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\n\r\nvar reset = require('../setters/reset');\r\nvar manual_number_entry = require('../setters/manual_number_entry');\r\nvar clear_segment = require('../setters/clear_segment');\r\nvar increment_current_segment = require('../setters/increment_current_segment');\r\nvar decrement_current_segment = require('../setters/decrement_current_segment');\r\nvar set_mode = require('../setters/set_mode');\r\nvar switch_times = require('../setters/switch_times');\r\n\r\nvar handle_tab = require('../events/handle_tab');\r\n\r\nvar all_number_keys = require('../static-values/all_number_keys');\r\nvar named_keys = require('../static-values/named_keys');\r\n\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function bind_events ($input) {\r\n\r\n\tvar prev_value = '';\r\n\r\n\tvar shiftKey = false;\r\n\r\n\tdocument.addEventListener('keydown', function(e){\r\n\t\tshiftKey = e.shiftKey;\r\n\t})\r\n\tdocument.addEventListener('keyup', function(e){\r\n\t\tshiftKey = e.shiftKey;\r\n\t})\r\n\r\n\tif ($input.form) {\r\n\t\t$input.form.addEventListener('submit', function(){\r\n\t\t\tauto_swap($input);\r\n\t\t})\r\n\t}\r\n\r\n\tvar focused_via_click = false;\r\n\r\n\t$input.addEventListener('mousedown', function(){\r\n\t\tfocused_via_click = true;\r\n\t});\r\n\r\n\t// Turns the IE clear button into a reset button\r\n\t$input.addEventListener('mouseup', function(){\r\n\t\tsetTimeout(function(){\r\n\t\t\tif ($input.value === '') reset($input);\r\n\t\t}, 1)\r\n\t});\r\n\r\n\t$input.addEventListener('click', function(e){\r\n\t\tselect_cursor_segment($input);\r\n\t});\r\n\r\n\t$input.addEventListener('blur', function(){\r\n\t\tvar current_value = $input.dataset.value;\r\n\t\tif (current_value !== prev_value) {\r\n\t\t\tprev_value = current_value;\r\n\t\t}\r\n\t\tfocused_via_click = false;\r\n\t});\r\n\r\n\t$input.addEventListener('focus', function(e){\r\n\t\tif (!focused_via_click) {\r\n\t\t\te.preventDefault();\r\n\t\t\tvar segment = shiftKey ? 'mode' : 'hrs';\r\n\t\t\tselect_segment($input, segment);\r\n\t\t}\r\n\t\tupdate_a11y($input, [\r\n\t\t\t'initial',\r\n\t\t\t'select'\r\n\t\t])\r\n\t});\r\n\r\n\t$input.addEventListener('keydown', function(e) {\r\n\t\tvar is_enter_key = e.which === 13;\r\n\t\tif (is_enter_key) return true;\r\n\r\n\t\tvar is_number_key = all_number_keys.indexOf(e.which) > -1;\r\n\t\tvar is_named_key = values(named_keys).indexOf(e.which) > -1;\r\n\t\tvar is_arrow_key = [named_keys.ArrowDown, named_keys.ArrowRight, named_keys.ArrowUp, named_keys.ArrowLeft].indexOf(e.which) > -1;\r\n\t\tvar is_mode_key = [named_keys.a, named_keys.p].indexOf(e.which) > -1;\r\n\t\tvar is_delete_key = [named_keys.Delete, named_keys.Backspace].indexOf(e.which) > -1;\r\n\r\n\t\tif (!is_named_key || is_arrow_key || is_number_key || is_mode_key || is_delete_key) { e.preventDefault(); }\r\n\r\n\t\tif (is_number_key) {\r\n\t\t\tmanual_number_entry($input, e.which);\r\n\t\t}\r\n\r\n\t\tif (is_delete_key) {\r\n\t\t\tvar segment = get_current_segment($input);\r\n\t\t\tclear_segment($input, segment);\r\n\t\t}\r\n\r\n\t\tswitch (e.which) {\r\n\t\t\tcase named_keys.ArrowRight: next_segment($input); break;\r\n\t\t\tcase named_keys.ArrowLeft:  prev_segment($input); break;\r\n\t\t\tcase named_keys.ArrowUp:    increment_current_segment($input); break;\r\n\t\t\tcase named_keys.ArrowDown:  decrement_current_segment($input); break;\r\n\t\t\tcase named_keys.Escape:     reset($input); break;\r\n\t\t\tcase named_keys.a:          set_mode($input, 'AM'); break;\r\n\t\t\tcase named_keys.p:          set_mode($input, 'PM'); break;\r\n\t\t\tcase named_keys.Tab:        handle_tab($input, e); break;\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction auto_swap($input) {\r\n\tif ($input.polyfill.autoSwap) {\r\n\t\tswitch_times($input, 24);\r\n\t\tsetTimeout(function(){\r\n\t\t\tswitch_times($input, 12);\r\n\t\t}, 1);\r\n\t}\r\n}\r\n\n},{\"../accessibility/update_a11y\":2,\"../events/handle_tab\":11,\"../getters/get_current_segment\":15,\"../helpers/values\":20,\"../selectors/next_segment\":22,\"../selectors/prev_segment\":23,\"../selectors/select_cursor_segment\":24,\"../selectors/select_segment\":25,\"../setters/clear_segment\":28,\"../setters/decrement_current_segment\":30,\"../setters/increment_current_segment\":32,\"../setters/manual_number_entry\":33,\"../setters/reset\":35,\"../setters/set_mode\":37,\"../setters/switch_times\":41,\"../static-values/all_number_keys\":44,\"../static-values/named_keys\":45}],10:[function(require,module,exports){\n\r\nmodule.exports = function create_event(eventName){\r\n\tvar event = document.createEvent('Event');\r\n\tevent.initEvent(eventName, true, true);\r\n\treturn event;\r\n}\r\n\n},{}],11:[function(require,module,exports){\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar prev_segment = require('../selectors/prev_segment');\r\nvar next_segment = require('../selectors/next_segment');\r\n\r\nmodule.exports = function handle_tab($input, e) {\r\n\tvar current_segment = get_current_segment($input);\r\n\tvar backwards_and_first = e.shiftKey && current_segment === 'hrs';\r\n\tvar forwards_and_last = !e.shiftKey && current_segment === 'mode';\r\n\r\n\tif (!backwards_and_first && !forwards_and_last) {\r\n\t\te.preventDefault();\r\n\t\tif (e.shiftKey) {\r\n\t\t\tprev_segment($input);\r\n\t\t} else {\r\n\t\t\tnext_segment($input);\r\n\t\t}\r\n\t}\r\n}\r\n\n},{\"../getters/get_current_segment\":15,\"../selectors/next_segment\":22,\"../selectors/prev_segment\":23}],12:[function(require,module,exports){\n\r\nvar trigger_event = require('./trigger_event');\r\n\r\n// It seems that oninput and onchange are treated the same way by browsers :/\r\nmodule.exports = function trigger_both_events($input) {\r\n\t// the event only ever fires if there is a full valid value available\r\n\ttrigger_event($input, 'input');\r\n\ttrigger_event($input,'change');\r\n}\r\n\n},{\"./trigger_event\":13}],13:[function(require,module,exports){\n\r\nvar create_event = require('./create_event');\r\n\r\nvar inputEvent = create_event('input');\r\nvar changeEvent = create_event('change');\r\n\r\nmodule.exports = function trigger_event($input, eventName) {\r\n\tvar event = {\r\n\t\tinput: inputEvent,\r\n\t\tchange: changeEvent,\r\n\t}[eventName];\r\n\r\n\tif (can_trigger_change($input)) {\r\n\t\t$input.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\n// Browsers only send out input and change events if the time element has a full valid value\r\nfunction can_trigger_change ($input) {\r\n\treturn !/--/.test($input.value);\r\n}\r\n\n},{\"./create_event\":10}],14:[function(require,module,exports){\n// selector is optional, it allows for an early exit\r\nmodule.exports = function ($input, selectorString) {\r\n\tvar $elem = $input;\r\n\r\n\t// https://stackoverflow.com/a/8729274/1611058\r\n\tvar ancestors = [];\r\n\twhile ($elem) {\r\n\t\tancestors.push($elem);\r\n\t\tvar matchesSelector = $elem.msMatchesSelector ?\r\n\t\t\t$elem.msMatchesSelector(selectorString) :\r\n\t\t\t$elem.matches(selectorString);\r\n\t\tif (matchesSelector) {\r\n\t\t\treturn ancestors;\r\n\t\t}\r\n\t\t$elem = $elem.parentElement;\r\n\t}\r\n\r\n\treturn ancestors;\r\n}\r\n\n},{}],15:[function(require,module,exports){\n\r\nvar ranges = require('../static-values/ranges');\r\nvar get_selected_range = require('./get_selected_range');\r\n\r\nmodule.exports = function get_current_segment ($input) {\r\n\tvar selection = get_selected_range($input);\r\n\tfor (var segment in ranges) {\r\n\t\tvar range = ranges[segment];\r\n\t\tvar aboveMin = range.start <= selection.start;\r\n\t\tvar belowMax = range.end >= selection.end;\r\n\t\tif (aboveMin && belowMax) {\r\n\t\t\treturn segment;\r\n\t\t}\r\n\t}\r\n\treturn 'hrs';\r\n}\r\n\n},{\"../static-values/ranges\":46,\"./get_selected_range\":17}],16:[function(require,module,exports){\n\r\nvar get_ancestors = require('./get_ancestors');\r\n\r\nmodule.exports = function get_label ($input) {\r\n\r\n\tvar labelText =\r\n\t\taria_labelledby($input) ||\r\n\t\taria_label($input) ||\r\n\t\tfor_attribute($input) ||\r\n\t\tlabel_wrapper_element($input) ||\r\n\t\ttitle_attribute($input);\r\n\r\n\tif (labelText) return labelText;\r\n\r\n\tconsole.error('Label text for input not found.', $input);\r\n\tthrow new Error('Cannot polyfill time input due to a missing label.');\r\n}\r\n\r\nfunction aria_labelledby($input){\r\n\tvar ariaLabelByID = $input.getAttribute('aria-labelledby');\r\n\tif (ariaLabelByID) {\r\n\t\tvar $ariaLabelBy = document.getElementById(ariaLabelByID);\r\n\t\tif ($ariaLabelBy) return $ariaLabelBy.textContent;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction aria_label($input){\r\n\tvar ariaLabel = $input.getAttribute('aria-label');\r\n\tif (ariaLabel) return ariaLabel;\r\n\treturn false;\r\n}\r\n\r\nfunction for_attribute($input){\r\n\tif ($input.id) {\r\n\t\tvar $forLabel = document.querySelector('label[for=\"'+$input.id+'\"]');\r\n\t\tif ($forLabel) return $forLabel.textContent;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction label_wrapper_element($input){\r\n\tvar ancestors = get_ancestors($input, 'label');\r\n\tvar $parentLabel = ancestors[ancestors.length - 1];\r\n\tif ($parentLabel.nodeName == 'LABEL') return $parentLabel.textContent;\r\n\treturn false\r\n}\r\n\r\nfunction title_attribute($input){\r\n\tvar titleLabel = $input.getAttribute('title');\r\n\tif (titleLabel) return titleLabel;\r\n\treturn false\r\n}\r\n\n},{\"./get_ancestors\":14}],17:[function(require,module,exports){\n\r\nmodule.exports = function get_selected_range ($input) {\r\n\treturn { start: $input.selectionStart, end: $input.selectionEnd };\r\n}\r\n\n},{}],18:[function(require,module,exports){\n\r\nvar convert_number = require('../converters/convert_number');\r\n\r\nmodule.exports = function get_values ($input, timeString) {\r\n\tvar value = timeString ? timeString : $input.value;\r\n\tvar regEx = /([0-9-]{1,2})\\:([0-9-]{1,2})\\s?(AM|PM|\\-\\-)?/;\r\n\tvar result = regEx.exec(value);\r\n\r\n\treturn {\r\n\t\thrs: convert_number(result[1]),\r\n\t\tmin: convert_number(result[2]),\r\n\t\tmode: result[3],\r\n\t}\r\n}\r\n\n},{\"../converters/convert_number\":4}],19:[function(require,module,exports){\n\r\nvar manual_entry_log = [];\r\n\r\nfunction clear () {\r\n\tmanual_entry_log = [];\r\n}\r\n\r\nfunction add (entry) {\r\n\tmanual_entry_log.push(entry);\r\n}\r\n\r\nfunction items(){\r\n\treturn manual_entry_log;\r\n}\r\n\r\nmodule.exports = {\r\n\titems: items,\r\n\tclear: clear,\r\n\tadd: add,\r\n}\r\n\n},{}],20:[function(require,module,exports){\n\r\n// IE11 doesn't support Object.values()\r\nmodule.exports = function values (obj) {\r\n\tvar key_values = [];\r\n\tfor (var key in obj) {\r\n\t\tkey_values.push(obj[key]);\r\n\t}\r\n\treturn key_values;\r\n}\r\n\n},{}],21:[function(require,module,exports){\n\r\nvar toArray = require('../converters/toArray');\r\n\r\nmodule.exports = function _$$ (selector) {\r\n\tvar elements = document.querySelectorAll(selector);\r\n\treturn toArray(elements);\r\n}\r\n\n},{\"../converters/toArray\":8}],22:[function(require,module,exports){\n\r\nvar traverse = require('./traverse');\r\n\r\nmodule.exports = function next_segment ($input) {\r\n\ttraverse($input, 'next');\r\n}\r\n\n},{\"./traverse\":26}],23:[function(require,module,exports){\n\r\nvar traverse = require('./traverse');\r\n\r\nmodule.exports = function prev_segment ($input) {\r\n\ttraverse($input, 'prev');\r\n}\r\n\n},{\"./traverse\":26}],24:[function(require,module,exports){\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar select_segment = require('./select_segment');\r\n\r\nmodule.exports = function select_cursor_segment ($input) {\r\n\tvar current_segment = get_current_segment($input);\r\n\tselect_segment($input, current_segment);\r\n}\r\n\n},{\"../getters/get_current_segment\":15,\"./select_segment\":25}],25:[function(require,module,exports){\n\r\nmodule.exports = function select_segment ($input, segment) {\r\n\r\n\tset_input_type();\r\n\r\n\tvar actions = {\r\n\t\thrs:  select(0, 2),\r\n\t\tmin:  select(3, 5),\r\n\t\tmode: select(6, 8),\r\n\t};\r\n\r\n\tactions[segment]($input);\r\n\r\n\tfunction set_input_type() {\r\n\t\tvar type = segment === 'mode' ? 'text' : 'tel';\r\n\t\t$input.setAttribute('type', type);\r\n\t}\r\n\r\n\tfunction select (start, end) {\r\n\t\treturn function () {\r\n\t\t\t$input.setSelectionRange(start, end);\r\n\t\t}\r\n\t}\r\n}\r\n\n},{}],26:[function(require,module,exports){\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar select_segment = require('../selectors/select_segment');\r\n\r\nvar manual_entry_log = require('../helpers/manual_entry_log');\r\nvar segments = require('../static-values/segments');\r\n\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function traverse ($input, direction) {\r\n\tvar segment = get_current_segment($input);\r\n\r\n\tvar modifier = direction === 'next' ? 1 : -1;\r\n\tvar next_segment_index = segments.indexOf(segment) + modifier;\r\n\r\n\tvar next_segment = {\r\n\t\tnext: segments[next_segment_index] || 'mode',\r\n\t\tprev: next_segment_index < 0 ? 'hrs' : segments[next_segment_index],\r\n\t}[direction];\r\n\r\n\tselect_segment($input, next_segment);\r\n\tmanual_entry_log.clear();\r\n\tupdate_a11y($input, ['select'])\r\n}\r\n\n},{\"../accessibility/update_a11y\":2,\"../getters/get_current_segment\":15,\"../helpers/manual_entry_log\":19,\"../selectors/select_segment\":25,\"../static-values/segments\":47}],27:[function(require,module,exports){\n\r\n// I need to keep this separate from reset so that\r\n// I can reset without attracting focus\r\n\r\nvar set_data_attribute = require('../setters/set_data_attribute');\r\nvar trigger_both_events = require('../events/trigger_both_events');\r\n\r\nmodule.exports = function apply_default ($input) {\r\n\t$input.value = '--:-- --';\r\n\tset_data_attribute($input, '');\r\n\ttrigger_both_events($input);\r\n}\r\n\n},{\"../events/trigger_both_events\":12,\"../setters/set_data_attribute\":36}],28:[function(require,module,exports){\n\r\nvar set_segment = require('./set_segment');\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function clear_segment ($input, segment) {\r\n\tset_segment($input, segment, '--');\r\n\tupdate_a11y($input, ['update']);\r\n}\r\n\n},{\"../accessibility/update_a11y\":2,\"./set_segment\":38}],29:[function(require,module,exports){\n\r\nvar switch_mode = require('./switch_mode');\r\nvar nudge_time_segment = require('./nudge_time_segment');\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function decrement ($input, segment) {\r\n\tif (segment === 'mode') {\r\n\t\tswitch_mode($input, 'PM')\r\n\t} else {\r\n\t\tnudge_time_segment($input, segment, 'down');\r\n\t}\r\n\tupdate_a11y($input, ['update']);\r\n}\r\n\n},{\"../accessibility/update_a11y\":2,\"./nudge_time_segment\":34,\"./switch_mode\":40}],30:[function(require,module,exports){\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar decrement = require('../setters/decrement');\r\n\r\nmodule.exports = function decrement_current_segment ($input){\r\n\tvar current_segment = get_current_segment($input);\r\n\tdecrement($input, current_segment);\r\n}\r\n\n},{\"../getters/get_current_segment\":15,\"../setters/decrement\":29}],31:[function(require,module,exports){\n\r\nvar switch_mode = require('./switch_mode');\r\nvar nudge_time_segment = require('./nudge_time_segment');\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function increment ($input, segment) {\r\n\tif (segment === 'mode') {\r\n\t\tswitch_mode($input, 'AM')\r\n\t} else {\r\n\t\tnudge_time_segment($input, segment, 'up');\r\n\t}\r\n\tupdate_a11y($input, ['update']);\r\n}\r\n\r\n\n},{\"../accessibility/update_a11y\":2,\"./nudge_time_segment\":34,\"./switch_mode\":40}],32:[function(require,module,exports){\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar increment = require('../setters/increment');\r\n\r\nmodule.exports = function increment_current_segment ($input) {\r\n\tvar current_segment = get_current_segment($input);\r\n\tincrement($input, current_segment);\r\n}\r\n\n},{\"../getters/get_current_segment\":15,\"../setters/increment\":31}],33:[function(require,module,exports){\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar set_segment = require('./set_segment');\r\nvar next_segment = require('../selectors/next_segment');\r\n\r\nvar manual_entry_log = require('../helpers/manual_entry_log');\r\nvar sorted_number_keys = require('../static-values/sorted_number_keys');\r\n\r\nmodule.exports = function manual_number_entry($input, key) {\r\n\tvar key_value = sorted_number_keys[key];\r\n\tvar segment = get_current_segment($input);\r\n\r\n\tif (segment !== 'mode') {\r\n\t\tvar entry_count = manual_entry_log.items().length;\r\n\r\n\t\tvar upper_limits = {\r\n\t\t\thrs: [1,2],\r\n\t\t\tmin: [5,9],\r\n\t\t}\r\n\t\tvar limit = upper_limits[segment][entry_count];\r\n\r\n\t\tif (entry_count < 2) {\r\n\t\t\tmanual_entry_log.add(key_value);\r\n\t\t}\r\n\r\n\t\tvar full_limit = parseInt(upper_limits[segment].join(''));\r\n\t\tvar full_entry = parseInt(manual_entry_log.items().join(''));\r\n\r\n\t\tif (full_limit >= full_entry) {\r\n\t\t\tset_segment($input, segment, full_entry);\r\n\t\t}\r\n\r\n\t\tvar at_limit = key_value > limit || manual_entry_log.items().length === 2;\r\n\r\n\t\tif (at_limit) {\r\n\t\t\tnext_segment($input);\r\n\t\t}\r\n\t}\r\n}\r\n\n},{\"../getters/get_current_segment\":15,\"../helpers/manual_entry_log\":19,\"../selectors/next_segment\":22,\"../static-values/sorted_number_keys\":48,\"./set_segment\":38}],34:[function(require,module,exports){\n\r\nvar get_values = require('../getters/get_values');\r\nvar convert_hours_to_12hr_time = require('../converters/convert_hours_to_12hr_time');\r\nvar leading_zero = require('../converters/leading_zero');\r\nvar set_segment = require('./set_segment');\r\n\r\nmodule.exports = function nudge_time_segment ($input, segment, direction) {\r\n\tvar current_values = get_values($input);\r\n\tvar time;\r\n\r\n\tvar modifier = direction === 'up' ? 1 : -1;\r\n\r\n\tif (current_values[segment] === '--') {\r\n\t\tvar current_time = new Date();\r\n\t\ttime = {\r\n\t\t\thrs: convert_hours_to_12hr_time(current_time.getHours()),\r\n\t\t\tmin: current_time.getMinutes(),\r\n\t\t}\r\n\t} else {\r\n\t\tvar minutes = {\r\n\t\t\tup : current_values.min < 59 ? current_values.min + modifier : 0,\r\n\t\t\tdown : current_values.min === 0 ? 59 : current_values.min + modifier,\r\n\t\t}\r\n\t\ttime = {\r\n\t\t\thrs: convert_hours_to_12hr_time(current_values.hrs + modifier),\r\n\t\t\tmin: minutes[direction],\r\n\t\t}\r\n\t}\r\n\r\n\tset_segment($input, segment, leading_zero(time[segment]) );\r\n}\r\n\n},{\"../converters/convert_hours_to_12hr_time\":3,\"../converters/leading_zero\":7,\"../getters/get_values\":18,\"./set_segment\":38}],35:[function(require,module,exports){\n\r\nvar apply_default = require('./apply_default');\r\nvar select_segment = require('../selectors/select_segment');\r\n\r\nmodule.exports = function reset ($input) {\r\n\tapply_default($input);\r\n\tselect_segment($input, 'hrs');\r\n}\r\n\n},{\"../selectors/select_segment\":25,\"./apply_default\":27}],36:[function(require,module,exports){\n\r\nvar convert_to_24hr_time = require('../converters/convert_to_24hr_time')\r\n\r\nmodule.exports = function set_data_attribute($input, timeString_12hr){\r\n\tvar filteredString = timeString_12hr.indexOf('-') > -1 ? '' : timeString_12hr;\r\n\tvar time24hr = convert_to_24hr_time(filteredString);\r\n\t$input.setAttribute('data-value', time24hr);\r\n}\r\n\n},{\"../converters/convert_to_24hr_time\":6}],37:[function(require,module,exports){\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar set_segment = require('./set_segment');\r\n\r\nmodule.exports = function set_mode ($input, type) {\r\n\tvar segment = get_current_segment($input);\r\n\tif (segment === 'mode') {\r\n\t\tset_segment($input, segment, type);\r\n\t}\r\n}\r\n\n},{\"../getters/get_current_segment\":15,\"./set_segment\":38}],38:[function(require,module,exports){\n\r\nvar get_values = require('../getters/get_values');\r\nvar leading_zero = require('../converters/leading_zero');\r\nvar select_segment = require('../selectors/select_segment');\r\nvar set_data_attribute = require('./set_data_attribute');\r\nvar trigger_both_events = require('../events/trigger_both_events');\r\n\r\nmodule.exports = function set_segment ($input, segment, value) {\r\n\tvar values = get_values($input);\r\n\tvalues[segment] = value;\r\n\tvar newInputVal = [\r\n\t\tleading_zero(values.hrs),':',\r\n\t\tleading_zero(values.min),' ',\r\n\t\tvalues.mode\r\n\t].join('');\r\n\t$input.value = newInputVal;\r\n\tselect_segment($input, segment);\r\n\tset_data_attribute($input, newInputVal);\r\n\ttrigger_both_events($input);\r\n}\r\n\n},{\"../converters/leading_zero\":7,\"../events/trigger_both_events\":12,\"../getters/get_values\":18,\"../selectors/select_segment\":25,\"./set_data_attribute\":36}],39:[function(require,module,exports){\n\r\nvar convert_to_12hr_time = require('../converters/convert_to_12hr_time');\r\nvar set_data_attribute = require('../setters/set_data_attribute');\r\n\r\nmodule.exports = function set_time($input, time_string_24hr) {\r\n\tvar twelveHr = convert_to_12hr_time(time_string_24hr);\r\n\t$input.value = twelveHr;\r\n\tset_data_attribute($input, time_string_24hr);\r\n}\r\n\n},{\"../converters/convert_to_12hr_time\":5,\"../setters/set_data_attribute\":36}],40:[function(require,module,exports){\n\r\nvar get_values = require('../getters/get_values');\r\nvar set_segment = require('./set_segment');\r\n\r\nmodule.exports = function switch_mode ($input, default_mode) {\r\n\tdefault_mode = default_mode || 'AM';\r\n\tvar current_mode = get_values($input).mode;\r\n\tvar new_mode = {\r\n\t\t'--' : default_mode,\r\n\t\t'AM' : 'PM',\r\n\t\t'PM' : 'AM',\r\n\t}[current_mode];\r\n\tset_segment($input, 'mode', new_mode);\r\n}\r\n\n},{\"../getters/get_values\":18,\"./set_segment\":38}],41:[function(require,module,exports){\n\r\nvar switch_to_data_value = require('./switch_to_data_value');\r\nvar set_time = require('./set_time');\r\n\r\nmodule.exports = function switch_times ($input, format) {\r\n\tvar is12hr = /\\s/.test($input.value);\r\n\r\n\tif (format != 12 && format != 24) {\r\n\t\tformat = is12hr ? 24 : 12;\r\n\t}\r\n\r\n\tvar actions = {\r\n\t\t12: function(){\r\n\t\t\tif (!is12hr) {\r\n\t\t\t\tset_time($input, $input.dataset.value);\r\n\t\t\t}\r\n\t\t},\r\n\t\t24: function(){\r\n\t\t\tif (is12hr) {\r\n\t\t\t\tswitch_to_data_value($input);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tactions[format]();\r\n}\r\n\n},{\"./set_time\":39,\"./switch_to_data_value\":42}],42:[function(require,module,exports){\n\r\nmodule.exports = function($input) {\r\n\tvar replacementVal = $input.dataset.value;\r\n\t$input.value = replacementVal;\r\n}\r\n\n},{}],43:[function(require,module,exports){\n\r\nvar set_time = require('../setters/set_time');\r\n\r\nmodule.exports = function update_time($input) {\r\n\tset_time($input, $input.value);\r\n\treturn $input;\r\n}\r\n\n},{\"../setters/set_time\":39}],44:[function(require,module,exports){\nvar all_number_keys = [\r\n  // 0,  1,  2,  3,  4,  5,  6,  7,  8,  9\r\n    48, 49, 50, 51, 52, 53, 54, 55, 56, 57,\r\n    96, 97, 98, 99,100,101,102,103,104,105\r\n];\r\n\r\nmodule.exports = all_number_keys;\r\n\n},{}],45:[function(require,module,exports){\nvar named_keys = {\r\n\tArrowDown: 40,\r\n\tArrowRight: 39,\r\n\tArrowUp: 38,\r\n\tArrowLeft: 37,\r\n\tBackspace: 8,\r\n\tDelete: 46,\r\n\tTab: 9,\r\n\tShift: 16,\r\n\tEscape: 27,\r\n\ta: 65,\r\n\tp: 80,\r\n}\r\n\r\nmodule.exports = named_keys;\r\n\n},{}],46:[function(require,module,exports){\n\r\nvar ranges = {\r\n\thrs : { start: 0, end: 2 },\r\n\tmin : { start: 3, end: 5 },\r\n\tmode : { start: 6, end: 8 },\r\n}\r\n\r\nmodule.exports = ranges;\r\n\n},{}],47:[function(require,module,exports){\n\r\nvar ranges = require('./ranges');\r\n\r\nvar segments = Object.keys(ranges);\r\n\r\nmodule.exports = segments;\r\n\n},{\"./ranges\":46}],48:[function(require,module,exports){\n\r\nvar all_number_keys = require('./all_number_keys');\r\n\r\nvar sorted_number_keys = {};\r\n// sorted_number_keys = { 48: 0, 49: 1, 96: 0, 97: 1, ... };\r\nall_number_keys.forEach(function(key, index) {\r\n\tvar number_val = index > 9 ? index - 10 : index;\r\n\tsorted_number_keys[key] = number_val;\r\n});\r\n\r\nmodule.exports = sorted_number_keys;\r\n\n},{\"./all_number_keys\":44}],49:[function(require,module,exports){\n\r\nvar apply_default = require('./core/setters/apply_default');\r\nvar update_time = require('./core/setters/update_time');\r\nvar set_data_attribute = require('./core/setters/set_data_attribute');\r\nvar bind_events = require('./core/events/bind_events');\r\nvar switch_times = require('./core/setters/switch_times');\r\nvar get_label = require('./core/getters/get_label');\r\n\r\nvar create_a11y_block = require('./core/accessibility/create_a11y_block');\r\n\r\nvar accessibility_block_created = false;\r\nvar $a11y;\r\n\r\nfunction TimePolyfill($input) {\r\n\r\n\t$input.setAttribute('autocomplete','off');\r\n\r\n\t// Prevent screen reader from announcing the default stuff\r\n\t$input.setAttribute('aria-hidden', true);\r\n\r\n\tif (!accessibility_block_created) {\r\n\t\t$a11y = create_a11y_block();\r\n\t\taccessibility_block_created = true;\r\n\t}\r\n\r\n\tvar label = get_label($input);\r\n\r\n\t$input.polyfill = {\r\n\t\t$a11y: $a11y,\r\n\t\tlabel: label,\r\n\t\tautoSwap: true,\r\n\t\tupdate: function() {\r\n\t\t\tupdate_time($input);\r\n\t\t},\r\n\t\tswap: function(forcedFormat) {\r\n\t\t\tswitch_times($input, forcedFormat);\r\n\t\t}\r\n\t}\r\n\r\n\tif ($input.value === '' || /--/.test($input.value)) {\r\n\t\tapply_default($input);\r\n\t\tset_data_attribute($input, '');\r\n\t} else {\r\n\t\tupdate_time($input);\r\n\t\tset_data_attribute($input, $input.value);\r\n\t}\r\n\r\n\tbind_events($input);\r\n}\r\n\r\nif (window) window.TimePolyfill = TimePolyfill;\r\nif (module) module.exports = TimePolyfill;\r\n\n},{\"./core/accessibility/create_a11y_block\":1,\"./core/events/bind_events\":9,\"./core/getters/get_label\":16,\"./core/setters/apply_default\":27,\"./core/setters/set_data_attribute\":36,\"./core/setters/switch_times\":41,\"./core/setters/update_time\":43}],50:[function(require,module,exports){\n\r\nmodule.exports = function($result, values){\r\n\tvar $list = $result.querySelector('.result__list');\r\n\tvar $close = $result.querySelector('.result__close');\r\n\r\n\tvar html = '';\r\n\tfor (var label in values) {\r\n\t\tvar value = values[label].replace(/^$/,'<span class=\"visually-hidden\">blank</span>');\r\n\t\thtml = html + [\r\n\t\t\t'<div class=\"result__item\">',\r\n\t\t\t\t'<dt class=\"result__label\">',label,'</dt>',\r\n\t\t\t\t'<dd class=\"result__value\">\"',value,'\"</dd>',\r\n\t\t\t'</div>'\r\n\t\t].join('');\r\n\t}\r\n\t$list.innerHTML = html;\r\n\t$result.classList.add('-visible');\r\n\r\n\t$close.onclick = function(){\r\n\t\t$result.classList.remove('-visible');\r\n\t}\r\n}\r\n\n},{}],51:[function(require,module,exports){\n\r\n//Code for tracking Google Analytics events\r\nmodule.exports = function GA_trackEvent(action, categoryLabelValue) {\r\n\r\n\tif (typeof gtag !== 'undefined') {\r\n\r\n\t\tif (categoryLabelValue) {\r\n\t\t\tgtag('event', action, {\r\n\t\t\t\tevent_category: categoryLabelValue[0],\r\n\t\t\t\tevent_label: categoryLabelValue[1],\r\n\t\t\t\tvalue: categoryLabelValue[2],\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tgtag('event', action);\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tcategoryLabelValue = {};\r\n\t\tvar data = {\r\n\t\t\taction: action,\r\n\t\t\tevent_category: categoryLabelValue.category || 'general',\r\n\t\t\tevent_label: categoryLabelValue.label || '(not set)',\r\n\t\t\tvalue: categoryLabelValue.value\r\n\t\t}\r\n\r\n\t\tconsole.log(\"GA event =\", data, '* = required');\r\n\t}\r\n}\r\n\n},{}],52:[function(require,module,exports){\n// Main javascript entry point\r\n// Should handle bootstrapping/starting application\r\n\r\n'use strict';\r\n\r\n// Time input polyfill\r\nvar TimePolyfill = require('../../index');\r\nvar _$$ = require('../../core/selectors/_$$');\r\nvar toArray = require('../../core/converters/toArray');\r\n\r\nvar result = require('../_modules/result/result');\r\n\r\nvar ga = require('./_helpers/gtag');\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\t// var $$timeInputs = _$$('input[type=\"time\"]');\r\n\tvar $$timeInputs = _$$('input.time');\r\n\t$$timeInputs.forEach(function (element) {\r\n\t\tnew TimePolyfill(element);\r\n\r\n\t\t// Disable auto swap\r\n\t\t// element.polyfill.autoSwap = false;\r\n\r\n\t\telement.oninput = function(){\r\n\t\t\tconsole.log('input', element.dataset.value);\r\n\t\t}\r\n\t\telement.onchange = function(){\r\n\t\t\tconsole.log('change', element.dataset.value);\r\n\t\t}\r\n\r\n\t\telement.addEventListener('change',  function(){\r\n\t\t\tconsole.log('listener change');\r\n\t\t});\r\n\t\telement.addEventListener('input', function(){\r\n\t\t\tconsole.log('listener input');\r\n\t\t});\r\n\t});\r\n\r\n\tdocument.querySelector('form').onsubmit = function(e){\r\n\t\te.preventDefault();\r\n\t\tvar labels = get_labels(this);\r\n\t\tvar values = get_values(this, labels);\r\n\t\tvar $result = document.querySelector('.result');\r\n\r\n\t\tga('form submit');\r\n\r\n\t\tresult($result, values);\r\n\t\t$result.focus();\r\n\r\n\t\tfunction get_labels (form) {\r\n\t\t\tvar labelList = [];\r\n\t\t\ttoArray(form.children).forEach(function(element){\r\n\t\t\t\tvar $label = element.querySelector('label');\r\n\t\t\t\tif ($label) {\r\n\t\t\t\t\tlabelList.push($label.textContent);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn labelList;\r\n\t\t}\r\n\r\n\t\tfunction get_values (form, labels) {\r\n\t\t\tvar valuesList = {};\r\n\t\t\ttoArray(form.elements).forEach(function(element, i){\r\n\t\t\t\tif (element.nodeName === 'INPUT') {\r\n\t\t\t\t\tvaluesList[labels[i]] = element.value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn valuesList;\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\n},{\"../../core/converters/toArray\":8,\"../../core/selectors/_$$\":21,\"../../index\":49,\"../_modules/result/result\":50,\"./_helpers/gtag\":51}]},{},[52])\n\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar get_values = require('../getters/get_values');\r\n\r\nmodule.exports = function update_a11y ($input, announcementArray) {\r\n\t// Timeout helps ensure that the input has stabilized\r\n\tsetTimeout(function(){\r\n\t\tvar current_segment = get_current_segment($input);\r\n\t\tvar values = get_values($input);\r\n\t\tvar value = values[current_segment];\r\n\t\tvar finalValue = value == '--' ? 'blank' : value;\r\n\r\n\t\tvar segmentName = {\r\n\t\t\thrs: 'Hours',\r\n\t\t\tmin: 'Minutes',\r\n\t\t\tmode: 'AM/PM'\r\n\t\t}[current_segment];\r\n\r\n\t\tvar announcements = {\r\n\t\t\tinitial: '$label grouping $fullValue.',\r\n\t\t\tselect: '$segmentName spin button $segmentValue.',\r\n\t\t\tupdate: '$segmentValue.',\r\n\t\t}\r\n\r\n\t\tvar textArray = announcementArray.map(function(providedString){\r\n\t\t\tif (announcements[providedString]) {\r\n\t\t\t\treturn announcements[providedString];\r\n\t\t\t}\r\n\t\t\treturn providedString;\r\n\t\t});\r\n\r\n\t\tvar fullValue = $input.value.replace(/--/g,'blank');\r\n\r\n\t\tvar html = '<p>' + textArray.join('</p><p>') + '</p>';\r\n\t\thtml = html.replace(/\\$label/g, $input.polyfill.label);\r\n\t\thtml = html.replace(/\\$segmentName/g, segmentName);\r\n\t\thtml = html.replace(/\\$segmentValue/g, finalValue);\r\n\t\thtml = html.replace(/\\$fullValue/g, fullValue);\r\n\r\n\t\t$input.polyfill.$a11y.innerHTML = html;\r\n\t}, 1);\r\n}\r\n","\r\nmodule.exports = function convert_hours_to_12hr_time (hours) {\r\n\treturn hours <= 12 ? hours === 0 ? 12 : hours : hours - 12;\r\n}\r\n","\r\nmodule.exports = function convert_number (number) {\r\n\treturn isNaN(number) ? number : parseInt(number);\r\n}\r\n","\r\nvar convert_number = require('./convert_number');\r\nvar convert_hours_to_12hr_time = require('./convert_hours_to_12hr_time');\r\nvar leading_zero = require('./leading_zero');\r\n\r\nmodule.exports = function convert_to_12hr_time (timeString_24hr) {\r\n\tif (timeString_24hr === '') return '--:-- --';\r\n\tvar twentyFour_regex = /([0-9]{2})\\:([0-9]{2})/;\r\n\tvar result = twentyFour_regex.exec(timeString_24hr);\r\n\tvar hrs_24 = convert_number(result[1]);\r\n\tvar min = result[2];\r\n\tvar hrs_12 = convert_hours_to_12hr_time(hrs_24);\r\n\tvar isPM = hrs_24 > 12;\r\n\tvar mode = isPM ? 'PM' : 'AM';\r\n\treturn [leading_zero(hrs_12), ':', min, ' ', mode].join('');\r\n}\r\n","\r\nvar leading_zero = require('./leading_zero');\r\n\r\nmodule.exports = function convert_to_24hr_time (timeString_12hr) {\r\n\tif (/-/.test(timeString_12hr)) return '';\r\n\tvar isPM = timeString_12hr.indexOf('PM') > -1;\r\n\tvar timeResult = /^([0-9]{2})/.exec(timeString_12hr);\r\n\tvar hrs = timeResult ? parseInt(timeResult[1]) : '';\r\n\tvar newHrs;\r\n\tif (hrs === 12) {\r\n\t\tnewHrs = isPM ? 12 : 00;\r\n\t} else {\r\n\t\tnewHrs = isPM ? hrs + 12 : hrs;\r\n\t}\r\n\tvar finalHrs = newHrs === 24 ? 0 : newHrs;\r\n\tvar timeRegEx = /^[0-9]{2}:([0-9]{2}) (AM|PM)/;\r\n\treturn timeString_12hr.replace(timeRegEx, leading_zero(finalHrs)+':$1');\r\n}\r\n","\r\nmodule.exports = function leading_zero (number) {\r\n\tif (isNaN(number)) return number;\r\n\tvar purified = parseInt(number);\r\n\treturn purified < 10 ? '0' + purified : number;\r\n}\r\n","\r\nmodule.exports = function(array){\r\n\treturn Array.prototype.slice.call(array, 0);\r\n}\r\n","\r\nvar values = require('../helpers/values');\r\n\r\nvar select_segment = require('../selectors/select_segment');\r\n\r\nvar next_segment = require('../selectors/next_segment');\r\nvar prev_segment = require('../selectors/prev_segment');\r\nvar select_cursor_segment = require('../selectors/select_cursor_segment');\r\n\r\nvar get_current_segment = require('../getters/get_current_segment');\r\n\r\nvar reset = require('../setters/reset');\r\nvar manual_number_entry = require('../setters/manual_number_entry');\r\nvar clear_segment = require('../setters/clear_segment');\r\nvar increment_current_segment = require('../setters/increment_current_segment');\r\nvar decrement_current_segment = require('../setters/decrement_current_segment');\r\nvar set_mode = require('../setters/set_mode');\r\nvar switch_times = require('../setters/switch_times');\r\n\r\nvar handle_tab = require('../events/handle_tab');\r\n\r\nvar all_number_keys = require('../static-values/all_number_keys');\r\nvar named_keys = require('../static-values/named_keys');\r\n\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function bind_events ($input) {\r\n\r\n\tvar prev_value = '';\r\n\r\n\tvar shiftKey = false;\r\n\r\n\tdocument.addEventListener('keydown', function(e){\r\n\t\tshiftKey = e.shiftKey;\r\n\t})\r\n\tdocument.addEventListener('keyup', function(e){\r\n\t\tshiftKey = e.shiftKey;\r\n\t})\r\n\r\n\tif ($input.form) {\r\n\t\t$input.form.addEventListener('submit', function(){\r\n\t\t\tauto_swap($input);\r\n\t\t})\r\n\t}\r\n\r\n\tvar focused_via_click = false;\r\n\r\n\t$input.addEventListener('mousedown', function(){\r\n\t\tfocused_via_click = true;\r\n\t});\r\n\r\n\t// Turns the IE clear button into a reset button\r\n\t$input.addEventListener('mouseup', function(){\r\n\t\tsetTimeout(function(){\r\n\t\t\tif ($input.value === '') reset($input);\r\n\t\t}, 1)\r\n\t});\r\n\r\n\t$input.addEventListener('click', function(e){\r\n\t\tselect_cursor_segment($input);\r\n\t});\r\n\r\n\t$input.addEventListener('blur', function(){\r\n\t\tvar current_value = $input.dataset.value;\r\n\t\tif (current_value !== prev_value) {\r\n\t\t\tprev_value = current_value;\r\n\t\t}\r\n\t\tfocused_via_click = false;\r\n\t});\r\n\r\n\t$input.addEventListener('focus', function(e){\r\n\t\tif (!focused_via_click) {\r\n\t\t\te.preventDefault();\r\n\t\t\tvar segment = shiftKey ? 'mode' : 'hrs';\r\n\t\t\tselect_segment($input, segment);\r\n\t\t}\r\n\t\tupdate_a11y($input, [\r\n\t\t\t'initial',\r\n\t\t\t'select'\r\n\t\t])\r\n\t});\r\n\r\n\t$input.addEventListener('keydown', function(e) {\r\n\t\tvar is_enter_key = e.which === 13;\r\n\t\tif (is_enter_key) return true;\r\n\r\n\t\tvar is_number_key = all_number_keys.indexOf(e.which) > -1;\r\n\t\tvar is_named_key = values(named_keys).indexOf(e.which) > -1;\r\n\t\tvar is_arrow_key = [named_keys.ArrowDown, named_keys.ArrowRight, named_keys.ArrowUp, named_keys.ArrowLeft].indexOf(e.which) > -1;\r\n\t\tvar is_mode_key = [named_keys.a, named_keys.p].indexOf(e.which) > -1;\r\n\t\tvar is_delete_key = [named_keys.Delete, named_keys.Backspace].indexOf(e.which) > -1;\r\n\r\n\t\tif (!is_named_key || is_arrow_key || is_number_key || is_mode_key || is_delete_key) { e.preventDefault(); }\r\n\r\n\t\tif (is_number_key) {\r\n\t\t\tmanual_number_entry($input, e.which);\r\n\t\t}\r\n\r\n\t\tif (is_delete_key) {\r\n\t\t\tvar segment = get_current_segment($input);\r\n\t\t\tclear_segment($input, segment);\r\n\t\t}\r\n\r\n\t\tswitch (e.which) {\r\n\t\t\tcase named_keys.ArrowRight: next_segment($input); break;\r\n\t\t\tcase named_keys.ArrowLeft:  prev_segment($input); break;\r\n\t\t\tcase named_keys.ArrowUp:    increment_current_segment($input); break;\r\n\t\t\tcase named_keys.ArrowDown:  decrement_current_segment($input); break;\r\n\t\t\tcase named_keys.Escape:     reset($input); break;\r\n\t\t\tcase named_keys.a:          set_mode($input, 'AM'); break;\r\n\t\t\tcase named_keys.p:          set_mode($input, 'PM'); break;\r\n\t\t\tcase named_keys.Tab:        handle_tab($input, e); break;\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction auto_swap($input) {\r\n\tif ($input.polyfill.autoSwap) {\r\n\t\tswitch_times($input, 24);\r\n\t\tsetTimeout(function(){\r\n\t\t\tswitch_times($input, 12);\r\n\t\t}, 1);\r\n\t}\r\n}\r\n","\r\nmodule.exports = function create_event(eventName){\r\n\tvar event = document.createEvent('Event');\r\n\tevent.initEvent(eventName, true, true);\r\n\treturn event;\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar prev_segment = require('../selectors/prev_segment');\r\nvar next_segment = require('../selectors/next_segment');\r\n\r\nmodule.exports = function handle_tab($input, e) {\r\n\tvar current_segment = get_current_segment($input);\r\n\tvar backwards_and_first = e.shiftKey && current_segment === 'hrs';\r\n\tvar forwards_and_last = !e.shiftKey && current_segment === 'mode';\r\n\r\n\tif (!backwards_and_first && !forwards_and_last) {\r\n\t\te.preventDefault();\r\n\t\tif (e.shiftKey) {\r\n\t\t\tprev_segment($input);\r\n\t\t} else {\r\n\t\t\tnext_segment($input);\r\n\t\t}\r\n\t}\r\n}\r\n","\r\nvar trigger_event = require('./trigger_event');\r\n\r\n// It seems that oninput and onchange are treated the same way by browsers :/\r\nmodule.exports = function trigger_both_events($input) {\r\n\t// the event only ever fires if there is a full valid value available\r\n\ttrigger_event($input, 'input');\r\n\ttrigger_event($input,'change');\r\n}\r\n","\r\nvar create_event = require('./create_event');\r\n\r\nvar inputEvent = create_event('input');\r\nvar changeEvent = create_event('change');\r\n\r\nmodule.exports = function trigger_event($input, eventName) {\r\n\tvar event = {\r\n\t\tinput: inputEvent,\r\n\t\tchange: changeEvent,\r\n\t}[eventName];\r\n\r\n\tif (can_trigger_change($input)) {\r\n\t\t$input.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\n// Browsers only send out input and change events if the time element has a full valid value\r\nfunction can_trigger_change ($input) {\r\n\treturn !/--/.test($input.value);\r\n}\r\n","// selector is optional, it allows for an early exit\r\nmodule.exports = function ($input, selectorString) {\r\n\tvar $elem = $input;\r\n\r\n\t// https://stackoverflow.com/a/8729274/1611058\r\n\tvar ancestors = [];\r\n\twhile ($elem) {\r\n\t\tancestors.push($elem);\r\n\t\tvar matchesSelector = $elem.msMatchesSelector ?\r\n\t\t\t$elem.msMatchesSelector(selectorString) :\r\n\t\t\t$elem.matches(selectorString);\r\n\t\tif (matchesSelector) {\r\n\t\t\treturn ancestors;\r\n\t\t}\r\n\t\t$elem = $elem.parentElement;\r\n\t}\r\n\r\n\treturn ancestors;\r\n}\r\n","\r\nvar ranges = require('../static-values/ranges');\r\nvar get_selected_range = require('./get_selected_range');\r\n\r\nmodule.exports = function get_current_segment ($input) {\r\n\tvar selection = get_selected_range($input);\r\n\tfor (var segment in ranges) {\r\n\t\tvar range = ranges[segment];\r\n\t\tvar aboveMin = range.start <= selection.start;\r\n\t\tvar belowMax = range.end >= selection.end;\r\n\t\tif (aboveMin && belowMax) {\r\n\t\t\treturn segment;\r\n\t\t}\r\n\t}\r\n\treturn 'hrs';\r\n}\r\n","\r\nvar get_ancestors = require('./get_ancestors');\r\n\r\nmodule.exports = function get_label ($input) {\r\n\r\n\tvar labelText =\r\n\t\taria_labelledby($input) ||\r\n\t\taria_label($input) ||\r\n\t\tfor_attribute($input) ||\r\n\t\tlabel_wrapper_element($input) ||\r\n\t\ttitle_attribute($input);\r\n\r\n\tif (labelText) return labelText;\r\n\r\n\tconsole.error('Label text for input not found.', $input);\r\n\tthrow new Error('Cannot polyfill time input due to a missing label.');\r\n}\r\n\r\nfunction aria_labelledby($input){\r\n\tvar ariaLabelByID = $input.getAttribute('aria-labelledby');\r\n\tif (ariaLabelByID) {\r\n\t\tvar $ariaLabelBy = document.getElementById(ariaLabelByID);\r\n\t\tif ($ariaLabelBy) return $ariaLabelBy.textContent;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction aria_label($input){\r\n\tvar ariaLabel = $input.getAttribute('aria-label');\r\n\tif (ariaLabel) return ariaLabel;\r\n\treturn false;\r\n}\r\n\r\nfunction for_attribute($input){\r\n\tif ($input.id) {\r\n\t\tvar $forLabel = document.querySelector('label[for=\"'+$input.id+'\"]');\r\n\t\tif ($forLabel) return $forLabel.textContent;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction label_wrapper_element($input){\r\n\tvar ancestors = get_ancestors($input, 'label');\r\n\tvar $parentLabel = ancestors[ancestors.length - 1];\r\n\tif ($parentLabel.nodeName == 'LABEL') return $parentLabel.textContent;\r\n\treturn false\r\n}\r\n\r\nfunction title_attribute($input){\r\n\tvar titleLabel = $input.getAttribute('title');\r\n\tif (titleLabel) return titleLabel;\r\n\treturn false\r\n}\r\n","\r\nmodule.exports = function get_selected_range ($input) {\r\n\treturn { start: $input.selectionStart, end: $input.selectionEnd };\r\n}\r\n","\r\nvar convert_number = require('../converters/convert_number');\r\n\r\nmodule.exports = function get_values ($input, timeString) {\r\n\tvar value = timeString ? timeString : $input.value;\r\n\tvar regEx = /([0-9-]{1,2})\\:([0-9-]{1,2})\\s?(AM|PM|\\-\\-)?/;\r\n\tvar result = regEx.exec(value);\r\n\r\n\treturn {\r\n\t\thrs: convert_number(result[1]),\r\n\t\tmin: convert_number(result[2]),\r\n\t\tmode: result[3],\r\n\t}\r\n}\r\n","\r\nvar manual_entry_log = [];\r\n\r\nfunction clear () {\r\n\tmanual_entry_log = [];\r\n}\r\n\r\nfunction add (entry) {\r\n\tmanual_entry_log.push(entry);\r\n}\r\n\r\nfunction items(){\r\n\treturn manual_entry_log;\r\n}\r\n\r\nmodule.exports = {\r\n\titems: items,\r\n\tclear: clear,\r\n\tadd: add,\r\n}\r\n","\r\n// IE11 doesn't support Object.values()\r\nmodule.exports = function values (obj) {\r\n\tvar key_values = [];\r\n\tfor (var key in obj) {\r\n\t\tkey_values.push(obj[key]);\r\n\t}\r\n\treturn key_values;\r\n}\r\n","\r\nvar toArray = require('../converters/toArray');\r\n\r\nmodule.exports = function _$$ (selector) {\r\n\tvar elements = document.querySelectorAll(selector);\r\n\treturn toArray(elements);\r\n}\r\n","\r\nvar traverse = require('./traverse');\r\n\r\nmodule.exports = function next_segment ($input) {\r\n\ttraverse($input, 'next');\r\n}\r\n","\r\nvar traverse = require('./traverse');\r\n\r\nmodule.exports = function prev_segment ($input) {\r\n\ttraverse($input, 'prev');\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar select_segment = require('./select_segment');\r\n\r\nmodule.exports = function select_cursor_segment ($input) {\r\n\tvar current_segment = get_current_segment($input);\r\n\tselect_segment($input, current_segment);\r\n}\r\n","\r\nmodule.exports = function select_segment ($input, segment) {\r\n\r\n\tset_input_type();\r\n\r\n\tvar actions = {\r\n\t\thrs:  select(0, 2),\r\n\t\tmin:  select(3, 5),\r\n\t\tmode: select(6, 8),\r\n\t};\r\n\r\n\tactions[segment]($input);\r\n\r\n\tfunction set_input_type() {\r\n\t\tvar type = segment === 'mode' ? 'text' : 'tel';\r\n\t\t$input.setAttribute('type', type);\r\n\t}\r\n\r\n\tfunction select (start, end) {\r\n\t\treturn function () {\r\n\t\t\t$input.setSelectionRange(start, end);\r\n\t\t}\r\n\t}\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar select_segment = require('../selectors/select_segment');\r\n\r\nvar manual_entry_log = require('../helpers/manual_entry_log');\r\nvar segments = require('../static-values/segments');\r\n\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function traverse ($input, direction) {\r\n\tvar segment = get_current_segment($input);\r\n\r\n\tvar modifier = direction === 'next' ? 1 : -1;\r\n\tvar next_segment_index = segments.indexOf(segment) + modifier;\r\n\r\n\tvar next_segment = {\r\n\t\tnext: segments[next_segment_index] || 'mode',\r\n\t\tprev: next_segment_index < 0 ? 'hrs' : segments[next_segment_index],\r\n\t}[direction];\r\n\r\n\tselect_segment($input, next_segment);\r\n\tmanual_entry_log.clear();\r\n\tupdate_a11y($input, ['select'])\r\n}\r\n","\r\n// I need to keep this separate from reset so that\r\n// I can reset without attracting focus\r\n\r\nvar set_data_attribute = require('../setters/set_data_attribute');\r\nvar trigger_both_events = require('../events/trigger_both_events');\r\n\r\nmodule.exports = function apply_default ($input) {\r\n\t$input.value = '--:-- --';\r\n\tset_data_attribute($input, '');\r\n\ttrigger_both_events($input);\r\n}\r\n","\r\nvar set_segment = require('./set_segment');\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function clear_segment ($input, segment) {\r\n\tset_segment($input, segment, '--');\r\n\tupdate_a11y($input, ['update']);\r\n}\r\n","\r\nvar switch_mode = require('./switch_mode');\r\nvar nudge_time_segment = require('./nudge_time_segment');\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function decrement ($input, segment) {\r\n\tif (segment === 'mode') {\r\n\t\tswitch_mode($input, 'PM')\r\n\t} else {\r\n\t\tnudge_time_segment($input, segment, 'down');\r\n\t}\r\n\tupdate_a11y($input, ['update']);\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar decrement = require('../setters/decrement');\r\n\r\nmodule.exports = function decrement_current_segment ($input){\r\n\tvar current_segment = get_current_segment($input);\r\n\tdecrement($input, current_segment);\r\n}\r\n","\r\nvar switch_mode = require('./switch_mode');\r\nvar nudge_time_segment = require('./nudge_time_segment');\r\nvar update_a11y = require('../accessibility/update_a11y');\r\n\r\nmodule.exports = function increment ($input, segment) {\r\n\tif (segment === 'mode') {\r\n\t\tswitch_mode($input, 'AM')\r\n\t} else {\r\n\t\tnudge_time_segment($input, segment, 'up');\r\n\t}\r\n\tupdate_a11y($input, ['update']);\r\n}\r\n\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar increment = require('../setters/increment');\r\n\r\nmodule.exports = function increment_current_segment ($input) {\r\n\tvar current_segment = get_current_segment($input);\r\n\tincrement($input, current_segment);\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar set_segment = require('./set_segment');\r\nvar next_segment = require('../selectors/next_segment');\r\n\r\nvar manual_entry_log = require('../helpers/manual_entry_log');\r\nvar sorted_number_keys = require('../static-values/sorted_number_keys');\r\n\r\nmodule.exports = function manual_number_entry($input, key) {\r\n\tvar key_value = sorted_number_keys[key];\r\n\tvar segment = get_current_segment($input);\r\n\r\n\tif (segment !== 'mode') {\r\n\t\tvar entry_count = manual_entry_log.items().length;\r\n\r\n\t\tvar upper_limits = {\r\n\t\t\thrs: [1,2],\r\n\t\t\tmin: [5,9],\r\n\t\t}\r\n\t\tvar limit = upper_limits[segment][entry_count];\r\n\r\n\t\tif (entry_count < 2) {\r\n\t\t\tmanual_entry_log.add(key_value);\r\n\t\t}\r\n\r\n\t\tvar full_limit = parseInt(upper_limits[segment].join(''));\r\n\t\tvar full_entry = parseInt(manual_entry_log.items().join(''));\r\n\r\n\t\tif (full_limit >= full_entry) {\r\n\t\t\tset_segment($input, segment, full_entry);\r\n\t\t}\r\n\r\n\t\tvar at_limit = key_value > limit || manual_entry_log.items().length === 2;\r\n\r\n\t\tif (at_limit) {\r\n\t\t\tnext_segment($input);\r\n\t\t}\r\n\t}\r\n}\r\n","\r\nvar get_values = require('../getters/get_values');\r\nvar convert_hours_to_12hr_time = require('../converters/convert_hours_to_12hr_time');\r\nvar leading_zero = require('../converters/leading_zero');\r\nvar set_segment = require('./set_segment');\r\n\r\nmodule.exports = function nudge_time_segment ($input, segment, direction) {\r\n\tvar current_values = get_values($input);\r\n\tvar time;\r\n\r\n\tvar modifier = direction === 'up' ? 1 : -1;\r\n\r\n\tif (current_values[segment] === '--') {\r\n\t\tvar current_time = new Date();\r\n\t\ttime = {\r\n\t\t\thrs: convert_hours_to_12hr_time(current_time.getHours()),\r\n\t\t\tmin: current_time.getMinutes(),\r\n\t\t}\r\n\t} else {\r\n\t\tvar minutes = {\r\n\t\t\tup : current_values.min < 59 ? current_values.min + modifier : 0,\r\n\t\t\tdown : current_values.min === 0 ? 59 : current_values.min + modifier,\r\n\t\t}\r\n\t\ttime = {\r\n\t\t\thrs: convert_hours_to_12hr_time(current_values.hrs + modifier),\r\n\t\t\tmin: minutes[direction],\r\n\t\t}\r\n\t}\r\n\r\n\tset_segment($input, segment, leading_zero(time[segment]) );\r\n}\r\n","\r\nvar apply_default = require('./apply_default');\r\nvar select_segment = require('../selectors/select_segment');\r\n\r\nmodule.exports = function reset ($input) {\r\n\tapply_default($input);\r\n\tselect_segment($input, 'hrs');\r\n}\r\n","\r\nvar convert_to_24hr_time = require('../converters/convert_to_24hr_time')\r\n\r\nmodule.exports = function set_data_attribute($input, timeString_12hr){\r\n\tvar filteredString = timeString_12hr.indexOf('-') > -1 ? '' : timeString_12hr;\r\n\tvar time24hr = convert_to_24hr_time(filteredString);\r\n\t$input.setAttribute('data-value', time24hr);\r\n}\r\n","\r\nvar get_current_segment = require('../getters/get_current_segment');\r\nvar set_segment = require('./set_segment');\r\n\r\nmodule.exports = function set_mode ($input, type) {\r\n\tvar segment = get_current_segment($input);\r\n\tif (segment === 'mode') {\r\n\t\tset_segment($input, segment, type);\r\n\t}\r\n}\r\n","\r\nvar get_values = require('../getters/get_values');\r\nvar leading_zero = require('../converters/leading_zero');\r\nvar select_segment = require('../selectors/select_segment');\r\nvar set_data_attribute = require('./set_data_attribute');\r\nvar trigger_both_events = require('../events/trigger_both_events');\r\n\r\nmodule.exports = function set_segment ($input, segment, value) {\r\n\tvar values = get_values($input);\r\n\tvalues[segment] = value;\r\n\tvar newInputVal = [\r\n\t\tleading_zero(values.hrs),':',\r\n\t\tleading_zero(values.min),' ',\r\n\t\tvalues.mode\r\n\t].join('');\r\n\t$input.value = newInputVal;\r\n\tselect_segment($input, segment);\r\n\tset_data_attribute($input, newInputVal);\r\n\ttrigger_both_events($input);\r\n}\r\n","\r\nvar convert_to_12hr_time = require('../converters/convert_to_12hr_time');\r\nvar set_data_attribute = require('../setters/set_data_attribute');\r\n\r\nmodule.exports = function set_time($input, time_string_24hr) {\r\n\tvar twelveHr = convert_to_12hr_time(time_string_24hr);\r\n\t$input.value = twelveHr;\r\n\tset_data_attribute($input, time_string_24hr);\r\n}\r\n","\r\nvar get_values = require('../getters/get_values');\r\nvar set_segment = require('./set_segment');\r\n\r\nmodule.exports = function switch_mode ($input, default_mode) {\r\n\tdefault_mode = default_mode || 'AM';\r\n\tvar current_mode = get_values($input).mode;\r\n\tvar new_mode = {\r\n\t\t'--' : default_mode,\r\n\t\t'AM' : 'PM',\r\n\t\t'PM' : 'AM',\r\n\t}[current_mode];\r\n\tset_segment($input, 'mode', new_mode);\r\n}\r\n","\r\nvar switch_to_data_value = require('./switch_to_data_value');\r\nvar set_time = require('./set_time');\r\n\r\nmodule.exports = function switch_times ($input, format) {\r\n\tvar is12hr = /\\s/.test($input.value);\r\n\r\n\tif (format != 12 && format != 24) {\r\n\t\tformat = is12hr ? 24 : 12;\r\n\t}\r\n\r\n\tvar actions = {\r\n\t\t12: function(){\r\n\t\t\tif (!is12hr) {\r\n\t\t\t\tset_time($input, $input.dataset.value);\r\n\t\t\t}\r\n\t\t},\r\n\t\t24: function(){\r\n\t\t\tif (is12hr) {\r\n\t\t\t\tswitch_to_data_value($input);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tactions[format]();\r\n}\r\n","\r\nmodule.exports = function($input) {\r\n\tvar replacementVal = $input.dataset.value;\r\n\t$input.value = replacementVal;\r\n}\r\n","\r\nvar set_time = require('../setters/set_time');\r\n\r\nmodule.exports = function update_time($input) {\r\n\tset_time($input, $input.value);\r\n\treturn $input;\r\n}\r\n","var all_number_keys = [\r\n  // 0,  1,  2,  3,  4,  5,  6,  7,  8,  9\r\n    48, 49, 50, 51, 52, 53, 54, 55, 56, 57,\r\n    96, 97, 98, 99,100,101,102,103,104,105\r\n];\r\n\r\nmodule.exports = all_number_keys;\r\n","var named_keys = {\r\n\tArrowDown: 40,\r\n\tArrowRight: 39,\r\n\tArrowUp: 38,\r\n\tArrowLeft: 37,\r\n\tBackspace: 8,\r\n\tDelete: 46,\r\n\tTab: 9,\r\n\tShift: 16,\r\n\tEscape: 27,\r\n\ta: 65,\r\n\tp: 80,\r\n}\r\n\r\nmodule.exports = named_keys;\r\n","\r\nvar ranges = {\r\n\thrs : { start: 0, end: 2 },\r\n\tmin : { start: 3, end: 5 },\r\n\tmode : { start: 6, end: 8 },\r\n}\r\n\r\nmodule.exports = ranges;\r\n","\r\nvar ranges = require('./ranges');\r\n\r\nvar segments = Object.keys(ranges);\r\n\r\nmodule.exports = segments;\r\n","\r\nvar all_number_keys = require('./all_number_keys');\r\n\r\nvar sorted_number_keys = {};\r\n// sorted_number_keys = { 48: 0, 49: 1, 96: 0, 97: 1, ... };\r\nall_number_keys.forEach(function(key, index) {\r\n\tvar number_val = index > 9 ? index - 10 : index;\r\n\tsorted_number_keys[key] = number_val;\r\n});\r\n\r\nmodule.exports = sorted_number_keys;\r\n","\r\nvar apply_default = require('./core/setters/apply_default');\r\nvar update_time = require('./core/setters/update_time');\r\nvar set_data_attribute = require('./core/setters/set_data_attribute');\r\nvar bind_events = require('./core/events/bind_events');\r\nvar switch_times = require('./core/setters/switch_times');\r\nvar get_label = require('./core/getters/get_label');\r\n\r\nvar create_a11y_block = require('./core/accessibility/create_a11y_block');\r\n\r\nvar accessibility_block_created = false;\r\nvar $a11y;\r\n\r\nfunction TimePolyfill($input) {\r\n\r\n\t$input.setAttribute('autocomplete','off');\r\n\r\n\t// Prevent screen reader from announcing the default stuff\r\n\t$input.setAttribute('aria-hidden', true);\r\n\r\n\tif (!accessibility_block_created) {\r\n\t\t$a11y = create_a11y_block();\r\n\t\taccessibility_block_created = true;\r\n\t}\r\n\r\n\tvar label = get_label($input);\r\n\r\n\t$input.polyfill = {\r\n\t\t$a11y: $a11y,\r\n\t\tlabel: label,\r\n\t\tautoSwap: true,\r\n\t\tupdate: function() {\r\n\t\t\tupdate_time($input);\r\n\t\t},\r\n\t\tswap: function(forcedFormat) {\r\n\t\t\tswitch_times($input, forcedFormat);\r\n\t\t}\r\n\t}\r\n\r\n\tif ($input.value === '' || /--/.test($input.value)) {\r\n\t\tapply_default($input);\r\n\t\tset_data_attribute($input, '');\r\n\t} else {\r\n\t\tupdate_time($input);\r\n\t\tset_data_attribute($input, $input.value);\r\n\t}\r\n\r\n\tbind_events($input);\r\n}\r\n\r\nif (window) window.TimePolyfill = TimePolyfill;\r\nif (module) module.exports = TimePolyfill;\r\n","\r\nmodule.exports = function($result, values){\r\n\tvar $list = $result.querySelector('.result__list');\r\n\tvar $close = $result.querySelector('.result__close');\r\n\r\n\tvar html = '';\r\n\tfor (var label in values) {\r\n\t\tvar value = values[label].replace(/^$/,'<span class=\"visually-hidden\">blank</span>');\r\n\t\thtml = html + [\r\n\t\t\t'<div class=\"result__item\">',\r\n\t\t\t\t'<dt class=\"result__label\">',label,'</dt>',\r\n\t\t\t\t'<dd class=\"result__value\">\"',value,'\"</dd>',\r\n\t\t\t'</div>'\r\n\t\t].join('');\r\n\t}\r\n\t$list.innerHTML = html;\r\n\t$result.classList.add('-visible');\r\n\r\n\t$close.onclick = function(){\r\n\t\t$result.classList.remove('-visible');\r\n\t}\r\n}\r\n","\r\n//Code for tracking Google Analytics events\r\nmodule.exports = function GA_trackEvent(action, categoryLabelValue) {\r\n\r\n\tif (typeof gtag !== 'undefined') {\r\n\r\n\t\tif (categoryLabelValue) {\r\n\t\t\tgtag('event', action, {\r\n\t\t\t\tevent_category: categoryLabelValue[0],\r\n\t\t\t\tevent_label: categoryLabelValue[1],\r\n\t\t\t\tvalue: categoryLabelValue[2],\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tgtag('event', action);\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tcategoryLabelValue = {};\r\n\t\tvar data = {\r\n\t\t\taction: action,\r\n\t\t\tevent_category: categoryLabelValue.category || 'general',\r\n\t\t\tevent_label: categoryLabelValue.label || '(not set)',\r\n\t\t\tvalue: categoryLabelValue.value\r\n\t\t}\r\n\r\n\t\tconsole.log(\"GA event =\", data, '* = required');\r\n\t}\r\n}\r\n","// Main javascript entry point\r\n// Should handle bootstrapping/starting application\r\n\r\n'use strict';\r\n\r\n// Time input polyfill\r\nvar TimePolyfill = require('../../index');\r\nvar _$$ = require('../../core/selectors/_$$');\r\nvar toArray = require('../../core/converters/toArray');\r\n\r\nvar result = require('../_modules/result/result');\r\n\r\nvar ga = require('./_helpers/gtag');\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\t// var $$timeInputs = _$$('input[type=\"time\"]');\r\n\tvar $$timeInputs = _$$('input.time');\r\n\t$$timeInputs.forEach(function (element) {\r\n\t\tnew TimePolyfill(element);\r\n\r\n\t\t// Disable auto swap\r\n\t\t// element.polyfill.autoSwap = false;\r\n\r\n\t\telement.oninput = function(){\r\n\t\t\tconsole.log('input', element.dataset.value);\r\n\t\t}\r\n\t\telement.onchange = function(){\r\n\t\t\tconsole.log('change', element.dataset.value);\r\n\t\t}\r\n\r\n\t\telement.addEventListener('change',  function(){\r\n\t\t\tconsole.log('listener change');\r\n\t\t});\r\n\t\telement.addEventListener('input', function(){\r\n\t\t\tconsole.log('listener input');\r\n\t\t});\r\n\t});\r\n\r\n\tdocument.querySelector('form').onsubmit = function(e){\r\n\t\te.preventDefault();\r\n\t\tvar labels = get_labels(this);\r\n\t\tvar values = get_values(this, labels);\r\n\t\tvar $result = document.querySelector('.result');\r\n\r\n\t\tga('form submit');\r\n\r\n\t\tresult($result, values);\r\n\t\t$result.focus();\r\n\r\n\t\tfunction get_labels (form) {\r\n\t\t\tvar labelList = [];\r\n\t\t\ttoArray(form.children).forEach(function(element){\r\n\t\t\t\tvar $label = element.querySelector('label');\r\n\t\t\t\tif ($label) {\r\n\t\t\t\t\tlabelList.push($label.textContent);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn labelList;\r\n\t\t}\r\n\r\n\t\tfunction get_values (form, labels) {\r\n\t\t\tvar valuesList = {};\r\n\t\t\ttoArray(form.elements).forEach(function(element, i){\r\n\t\t\t\tif (element.nodeName === 'INPUT') {\r\n\t\t\t\t\tvaluesList[labels[i]] = element.value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn valuesList;\r\n\t\t}\r\n\t}\r\n\r\n});\r\n"],"sourceRoot":"/source/"}