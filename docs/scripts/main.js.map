{"version":3,"sources":["src/_scripts/node_modules/browser-pack/_prelude.js","src/_scripts/core/accessibility/create_a11y_block.js","src/_scripts/main.js","src/_scripts/core/accessibility/update_a11y.js","src/_scripts/core/converters/convert_hours_to_12hr_time.js","src/_scripts/core/converters/convert_number.js","src/_scripts/core/converters/convert_to_12hr_time.js","src/_scripts/core/converters/convert_to_24hr_time.js","src/_scripts/core/converters/leading_zero.js","src/_scripts/core/converters/toArray.js","src/_scripts/core/events/bind_events.js","src/_scripts/core/events/create_event.js","src/_scripts/core/events/handle_tab.js","src/_scripts/core/events/trigger_both_events.js","src/_scripts/core/events/trigger_event.js","src/_scripts/core/getters/get_ancestors.js","src/_scripts/core/getters/get_current_segment.js","src/_scripts/core/getters/get_label.js","src/_scripts/core/getters/get_selected_range.js","src/_scripts/core/getters/get_values.js","src/_scripts/core/helpers/manual_entry_log.js","src/_scripts/core/helpers/values.js","src/_scripts/core/selectors/_$$.js","src/_scripts/core/selectors/next_segment.js","src/_scripts/core/selectors/prev_segment.js","src/_scripts/core/selectors/select_cursor_segment.js","src/_scripts/core/selectors/select_segment.js","src/_scripts/core/selectors/traverse.js","src/_scripts/core/setters/apply_default.js","src/_scripts/core/setters/clear_segment.js","src/_scripts/core/setters/decrement.js","src/_scripts/core/setters/decrement_current_segment.js","src/_scripts/core/setters/increment.js","src/_scripts/core/setters/increment_current_segment.js","src/_scripts/core/setters/manual_number_entry.js","src/_scripts/core/setters/nudge_time_segment.js","src/_scripts/core/setters/reset.js","src/_scripts/core/setters/set_data_attribute.js","src/_scripts/core/setters/set_mode.js","src/_scripts/core/setters/set_segment.js","src/_scripts/core/setters/set_time.js","src/_scripts/core/setters/switch_mode.js","src/_scripts/core/setters/switch_times.js","src/_scripts/core/setters/switch_to_data_value.js","src/_scripts/core/setters/update_time.js","src/_scripts/core/static-values/all_number_keys.js","src/_scripts/core/static-values/named_keys.js","src/_scripts/core/static-values/ranges.js","src/_scripts/core/static-values/segments.js","src/_scripts/core/static-values/sorted_number_keys.js","src/_scripts/index.js","src/_scripts/src/_modules/result/result.js","src/_scripts/src/_scripts/_helpers/gtag.js","src/_scripts/src/_scripts/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$block","document","createElement","setAttribute","classList","add","querySelector","appendChild","2","get_current_segment","get_values","$input","announcementArray","setTimeout","current_segment","value","finalValue","segmentName","hrs","min","mode","announcements","initial","select","update","textArray","map","providedString","fullValue","replace","html","join","polyfill","label","$a11y","innerHTML","../getters/get_current_segment","../getters/get_values","3","hours","4","number","isNaN","parseInt","5","convert_number","convert_hours_to_12hr_time","leading_zero","timeString_24hr","result","exec","hrs_24","hrs_12","./convert_hours_to_12hr_time","./convert_number","./leading_zero","6","timeString_12hr","test","newHrs","isPM","indexOf","timeResult","finalHrs","7","purified","8","array","Array","prototype","slice","9","values","select_segment","next_segment","prev_segment","select_cursor_segment","reset","manual_number_entry","clear_segment","increment_current_segment","decrement_current_segment","set_mode","switch_times","handle_tab","all_number_keys","named_keys","update_a11y","prev_value","shiftKey","addEventListener","form","autoSwap","auto_swap","focused_via_click","current_value","dataset","preventDefault","which","is_number_key","is_named_key","is_arrow_key","ArrowDown","ArrowRight","ArrowUp","ArrowLeft","is_mode_key","is_delete_key","Delete","Backspace","segment","Escape","Tab","../accessibility/update_a11y","../events/handle_tab","../helpers/values","../selectors/next_segment","../selectors/prev_segment","../selectors/select_cursor_segment","../selectors/select_segment","../setters/clear_segment","../setters/decrement_current_segment","../setters/increment_current_segment","../setters/manual_number_entry","../setters/reset","../setters/set_mode","../setters/switch_times","../static-values/all_number_keys","../static-values/named_keys","10","eventName","event","createEvent","initEvent","11","backwards_and_first","forwards_and_last","12","trigger_event","./trigger_event","13","create_event","inputEvent","changeEvent","input","change","can_trigger_change","dispatchEvent","./create_event","14","selectorString","$elem","ancestors","push","msMatchesSelector","matches","parentElement","15","ranges","get_selected_range","selection","range","aboveMin","start","belowMax","end","../static-values/ranges","./get_selected_range","16","get_ancestors","labelText","ariaLabelByID","getAttribute","$ariaLabelBy","getElementById","textContent","aria_labelledby","ariaLabel","aria_label","id","$forLabel","for_attribute","$parentLabel","nodeName","label_wrapper_element","titleLabel","title_attribute","console","error","./get_ancestors","17","selectionStart","selectionEnd","18","timeString","../converters/convert_number","19","manual_entry_log","items","clear","entry","20","obj","key_values","key","21","toArray","selector","elements","querySelectorAll","../converters/toArray","22","traverse","./traverse","23","24","./select_segment","25","type","setSelectionRange","26","segments","direction","modifier","next_segment_index","next","prev","../helpers/manual_entry_log","../static-values/segments","27","set_data_attribute","trigger_both_events","../events/trigger_both_events","../setters/set_data_attribute","28","set_segment","./set_segment","29","switch_mode","nudge_time_segment","./nudge_time_segment","./switch_mode","30","decrement","../setters/decrement","31","32","increment","../setters/increment","33","sorted_number_keys","key_value","entry_count","upper_limits","limit","full_limit","full_entry","../static-values/sorted_number_keys","34","time","current_values","current_time","Date","getHours","getMinutes","minutes","up","down","../converters/convert_hours_to_12hr_time","../converters/leading_zero","35","apply_default","./apply_default","36","convert_to_24hr_time","filteredString","time24hr","../converters/convert_to_24hr_time","37","38","newInputVal","./set_data_attribute","39","convert_to_12hr_time","time_string_24hr","twelveHr","../converters/convert_to_12hr_time","40","default_mode","current_mode","--","AM","PM","41","switch_to_data_value","set_time","format","is12hr","./set_time","./switch_to_data_value","42","replacementVal","43","../setters/set_time","44","45","Shift","46","47","Object","keys","./ranges","48","forEach","index","number_val","./all_number_keys","49","update_time","bind_events","get_label","create_a11y_block","accessibility_block_created","TimePolyfill","swap","forcedFormat","window","./core/accessibility/create_a11y_block","./core/events/bind_events","./core/getters/get_label","./core/setters/apply_default","./core/setters/set_data_attribute","./core/setters/switch_times","./core/setters/update_time","50","$result","$list","$close","onclick","remove","51","action","categoryLabelValue","gtag","event_category","event_label","data","category","log","52","_$$","ga","element","oninput","onchange","onsubmit","labelList","labels","valuesList","this","children","$label","focus","../../core/converters/toArray","../../core/selectors/_$$","../../index","../_modules/result/result","./_helpers/gtag"],"mappings":"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","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports = function create_accessibility_block() {\n\tvar $block = document.createElement('div')\n\t$block.setAttribute('aria-live', 'assertive')\n\t$block.setAttribute(\n\t\t'style',\n\t\t'position: absolute; opacity: 0; height: 0; width: 0; overflow: hidden; pointer-events: none;',\n\t)\n\t$block.classList.add('time-input-polyfill-accessibility-block')\n\tdocument.querySelector('body').appendChild($block)\n\treturn $block\n}\n","// Main javascript entry point\n// Should handle bootstrapping/starting application\n\n'use strict'\n\n// Time input polyfill\nvar TimePolyfill = require('../../index')\nvar _$$ = require('../../core/selectors/_$$')\nvar toArray = require('../../core/converters/toArray')\n\nvar result = require('../_modules/result/result')\n\nvar ga = require('./_helpers/gtag')\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\t// var $$timeInputs = _$$('input[type=\"time\"]');\n\tvar $$timeInputs = _$$('input.time')\n\t$$timeInputs.forEach(function(element) {\n\t\tnew TimePolyfill(element)\n\n\t\t// Disable auto swap\n\t\t// element.polyfill.autoSwap = false;\n\n\t\telement.oninput = function() {\n\t\t\tconsole.log('input', element.dataset.value)\n\t\t}\n\t\telement.onchange = function() {\n\t\t\tconsole.log('change', element.dataset.value)\n\t\t}\n\n\t\telement.addEventListener('change', function() {\n\t\t\tconsole.log('listener change')\n\t\t})\n\t\telement.addEventListener('input', function() {\n\t\t\tconsole.log('listener input')\n\t\t})\n\t})\n\n\tdocument.querySelector('form').onsubmit = function(e) {\n\t\te.preventDefault()\n\t\tvar labels = get_labels(this)\n\t\tvar values = get_values(this, labels)\n\t\tvar $result = document.querySelector('.result')\n\n\t\tga('form submit')\n\n\t\tresult($result, values)\n\t\t$result.focus()\n\n\t\tfunction get_labels(form) {\n\t\t\tvar labelList = []\n\t\t\ttoArray(form.children).forEach(function(element) {\n\t\t\t\tvar $label = element.querySelector('label')\n\t\t\t\tif ($label) {\n\t\t\t\t\tlabelList.push($label.textContent)\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn labelList\n\t\t}\n\n\t\tfunction get_values(form, labels) {\n\t\t\tvar valuesList = {}\n\t\t\ttoArray(form.elements).forEach(function(element, i) {\n\t\t\t\tif (element.nodeName === 'INPUT') {\n\t\t\t\t\tvaluesList[labels[i]] = element.value\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn valuesList\n\t\t}\n\t}\n})\n","var get_current_segment = require('../getters/get_current_segment')\nvar get_values = require('../getters/get_values')\n\nmodule.exports = function update_a11y($input, announcementArray) {\n\t// Timeout helps ensure that the input has stabilized\n\tsetTimeout(function() {\n\t\tvar current_segment = get_current_segment($input)\n\t\tvar values = get_values($input)\n\t\tvar value = values[current_segment]\n\t\tvar finalValue = value == '--' ? 'blank' : value\n\n\t\tvar segmentName = {\n\t\t\thrs: 'Hours',\n\t\t\tmin: 'Minutes',\n\t\t\tmode: 'AM/PM',\n\t\t}[current_segment]\n\n\t\tvar announcements = {\n\t\t\tinitial: '$label grouping $fullValue.',\n\t\t\tselect: '$segmentName spin button $segmentValue.',\n\t\t\tupdate: '$segmentValue.',\n\t\t}\n\n\t\tvar textArray = announcementArray.map(function(providedString) {\n\t\t\tif (announcements[providedString]) {\n\t\t\t\treturn announcements[providedString]\n\t\t\t}\n\t\t\treturn providedString\n\t\t})\n\n\t\tvar fullValue = $input.value.replace(/--/g, 'blank')\n\n\t\tvar html = '<p>' + textArray.join('</p><p>') + '</p>'\n\t\thtml = html.replace(/\\$label/g, $input.polyfill.label)\n\t\thtml = html.replace(/\\$segmentName/g, segmentName)\n\t\thtml = html.replace(/\\$segmentValue/g, finalValue)\n\t\thtml = html.replace(/\\$fullValue/g, fullValue)\n\n\t\t$input.polyfill.$a11y.innerHTML = html\n\t}, 1)\n}\n","module.exports = function convert_hours_to_12hr_time(hours) {\n\treturn hours <= 12 ? (hours === 0 ? 12 : hours) : hours - 12\n}\n","module.exports = function convert_number(number) {\n\treturn isNaN(number) ? number : parseInt(number)\n}\n","var convert_number = require('./convert_number')\nvar convert_hours_to_12hr_time = require('./convert_hours_to_12hr_time')\nvar leading_zero = require('./leading_zero')\n\nmodule.exports = function convert_to_12hr_time(timeString_24hr) {\n\tif (timeString_24hr === '') return '--:-- --'\n\tvar twentyFour_regex = /([0-9]{2})\\:([0-9]{2})/\n\tvar result = twentyFour_regex.exec(timeString_24hr)\n\tvar hrs_24 = convert_number(result[1])\n\tvar min = result[2]\n\tvar hrs_12 = convert_hours_to_12hr_time(hrs_24)\n\tvar isPM = hrs_24 > 12\n\tvar mode = isPM ? 'PM' : 'AM'\n\treturn [leading_zero(hrs_12), ':', min, ' ', mode].join('')\n}\n","var leading_zero = require('./leading_zero')\n\nmodule.exports = function convert_to_24hr_time(timeString_12hr) {\n\tif (/-/.test(timeString_12hr)) return ''\n\tvar isPM = timeString_12hr.indexOf('PM') > -1\n\tvar timeResult = /^([0-9]{2})/.exec(timeString_12hr)\n\tvar hrs = timeResult ? parseInt(timeResult[1]) : ''\n\tvar newHrs\n\tif (hrs === 12) {\n\t\tnewHrs = isPM ? 12 : 0\n\t} else {\n\t\tnewHrs = isPM ? hrs + 12 : hrs\n\t}\n\tvar finalHrs = newHrs === 24 ? 0 : newHrs\n\tvar timeRegEx = /^[0-9]{2}:([0-9]{2}) (AM|PM)/\n\treturn timeString_12hr.replace(timeRegEx, leading_zero(finalHrs) + ':$1')\n}\n","module.exports = function leading_zero(number) {\n\tif (isNaN(number)) return number\n\tvar purified = parseInt(number)\n\treturn purified < 10 ? '0' + purified : number\n}\n","module.exports = function(array) {\n\treturn Array.prototype.slice.call(array, 0)\n}\n","var values = require('../helpers/values')\n\nvar select_segment = require('../selectors/select_segment')\n\nvar next_segment = require('../selectors/next_segment')\nvar prev_segment = require('../selectors/prev_segment')\nvar select_cursor_segment = require('../selectors/select_cursor_segment')\n\nvar get_current_segment = require('../getters/get_current_segment')\n\nvar reset = require('../setters/reset')\nvar manual_number_entry = require('../setters/manual_number_entry')\nvar clear_segment = require('../setters/clear_segment')\nvar increment_current_segment = require('../setters/increment_current_segment')\nvar decrement_current_segment = require('../setters/decrement_current_segment')\nvar set_mode = require('../setters/set_mode')\nvar switch_times = require('../setters/switch_times')\n\nvar handle_tab = require('../events/handle_tab')\n\nvar all_number_keys = require('../static-values/all_number_keys')\nvar named_keys = require('../static-values/named_keys')\n\nvar update_a11y = require('../accessibility/update_a11y')\n\nmodule.exports = function bind_events($input) {\n\tvar prev_value = ''\n\n\tvar shiftKey = false\n\n\tdocument.addEventListener('keydown', function(e) {\n\t\tshiftKey = e.shiftKey\n\t})\n\tdocument.addEventListener('keyup', function(e) {\n\t\tshiftKey = e.shiftKey\n\t})\n\n\tif ($input.form) {\n\t\t$input.form.addEventListener('submit', function() {\n\t\t\tauto_swap($input)\n\t\t})\n\t}\n\n\tvar focused_via_click = false\n\n\t$input.addEventListener('mousedown', function() {\n\t\tfocused_via_click = true\n\t})\n\n\t// Turns the IE clear button into a reset button\n\t$input.addEventListener('mouseup', function() {\n\t\tsetTimeout(function() {\n\t\t\tif ($input.value === '') reset($input)\n\t\t}, 1)\n\t})\n\n\t$input.addEventListener('click', function(e) {\n\t\tselect_cursor_segment($input)\n\t})\n\n\t$input.addEventListener('blur', function() {\n\t\tvar current_value = $input.dataset.value\n\t\tif (current_value !== prev_value) {\n\t\t\tprev_value = current_value\n\t\t}\n\t\tfocused_via_click = false\n\t})\n\n\t$input.addEventListener('focus', function(e) {\n\t\tif (!focused_via_click) {\n\t\t\te.preventDefault()\n\t\t\tvar segment = shiftKey ? 'mode' : 'hrs'\n\t\t\tselect_segment($input, segment)\n\t\t}\n\t\tupdate_a11y($input, ['initial', 'select'])\n\t})\n\n\t$input.addEventListener('keydown', function(e) {\n\t\tvar is_enter_key = e.which === 13\n\t\tif (is_enter_key) return true\n\n\t\tvar is_number_key = all_number_keys.indexOf(e.which) > -1\n\t\tvar is_named_key = values(named_keys).indexOf(e.which) > -1\n\t\tvar is_arrow_key =\n\t\t\t[\n\t\t\t\tnamed_keys.ArrowDown,\n\t\t\t\tnamed_keys.ArrowRight,\n\t\t\t\tnamed_keys.ArrowUp,\n\t\t\t\tnamed_keys.ArrowLeft,\n\t\t\t].indexOf(e.which) > -1\n\t\tvar is_mode_key = [named_keys.a, named_keys.p].indexOf(e.which) > -1\n\t\tvar is_delete_key =\n\t\t\t[named_keys.Delete, named_keys.Backspace].indexOf(e.which) > -1\n\n\t\tif (\n\t\t\t!is_named_key ||\n\t\t\tis_arrow_key ||\n\t\t\tis_number_key ||\n\t\t\tis_mode_key ||\n\t\t\tis_delete_key\n\t\t) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tif (is_number_key) {\n\t\t\tmanual_number_entry($input, e.which)\n\t\t}\n\n\t\tif (is_delete_key) {\n\t\t\tvar segment = get_current_segment($input)\n\t\t\tclear_segment($input, segment)\n\t\t}\n\n\t\tswitch (e.which) {\n\t\t\tcase named_keys.ArrowRight:\n\t\t\t\tnext_segment($input)\n\t\t\t\tbreak\n\t\t\tcase named_keys.ArrowLeft:\n\t\t\t\tprev_segment($input)\n\t\t\t\tbreak\n\t\t\tcase named_keys.ArrowUp:\n\t\t\t\tincrement_current_segment($input)\n\t\t\t\tbreak\n\t\t\tcase named_keys.ArrowDown:\n\t\t\t\tdecrement_current_segment($input)\n\t\t\t\tbreak\n\t\t\tcase named_keys.Escape:\n\t\t\t\treset($input)\n\t\t\t\tbreak\n\t\t\tcase named_keys.a:\n\t\t\t\tset_mode($input, 'AM')\n\t\t\t\tbreak\n\t\t\tcase named_keys.p:\n\t\t\t\tset_mode($input, 'PM')\n\t\t\t\tbreak\n\t\t\tcase named_keys.Tab:\n\t\t\t\thandle_tab($input, e)\n\t\t\t\tbreak\n\t\t}\n\t})\n}\n\nfunction auto_swap($input) {\n\tif ($input.polyfill.autoSwap) {\n\t\tswitch_times($input, 24)\n\t\tsetTimeout(function() {\n\t\t\tswitch_times($input, 12)\n\t\t}, 1)\n\t}\n}\n","module.exports = function create_event(eventName) {\n\tvar event = document.createEvent('Event')\n\tevent.initEvent(eventName, true, true)\n\treturn event\n}\n","var get_current_segment = require('../getters/get_current_segment')\nvar prev_segment = require('../selectors/prev_segment')\nvar next_segment = require('../selectors/next_segment')\n\nmodule.exports = function handle_tab($input, e) {\n\tvar current_segment = get_current_segment($input)\n\tvar backwards_and_first = e.shiftKey && current_segment === 'hrs'\n\tvar forwards_and_last = !e.shiftKey && current_segment === 'mode'\n\n\tif (!backwards_and_first && !forwards_and_last) {\n\t\te.preventDefault()\n\t\tif (e.shiftKey) {\n\t\t\tprev_segment($input)\n\t\t} else {\n\t\t\tnext_segment($input)\n\t\t}\n\t}\n}\n","var trigger_event = require('./trigger_event')\n\n// It seems that oninput and onchange are treated the same way by browsers :/\nmodule.exports = function trigger_both_events($input) {\n\t// the event only ever fires if there is a full valid value available\n\ttrigger_event($input, 'input')\n\ttrigger_event($input, 'change')\n}\n","var create_event = require('./create_event')\n\nvar inputEvent = create_event('input')\nvar changeEvent = create_event('change')\n\nmodule.exports = function trigger_event($input, eventName) {\n\tvar event = {\n\t\tinput: inputEvent,\n\t\tchange: changeEvent,\n\t}[eventName]\n\n\tif (can_trigger_change($input)) {\n\t\t$input.dispatchEvent(event)\n\t}\n}\n\n// Browsers only send out input and change events if the time element has a full valid value\nfunction can_trigger_change($input) {\n\treturn !/--/.test($input.value)\n}\n","// selector is optional, it allows for an early exit\nmodule.exports = function($input, selectorString) {\n\tvar $elem = $input\n\n\t// https://stackoverflow.com/a/8729274/1611058\n\tvar ancestors = []\n\twhile ($elem) {\n\t\tancestors.push($elem)\n\t\tvar matchesSelector = $elem.msMatchesSelector\n\t\t\t? $elem.msMatchesSelector(selectorString)\n\t\t\t: $elem.matches(selectorString)\n\t\tif (matchesSelector) {\n\t\t\treturn ancestors\n\t\t}\n\t\t$elem = $elem.parentElement\n\t}\n\n\treturn ancestors\n}\n","var ranges = require('../static-values/ranges')\nvar get_selected_range = require('./get_selected_range')\n\nmodule.exports = function get_current_segment($input) {\n\tvar selection = get_selected_range($input)\n\tfor (var segment in ranges) {\n\t\tvar range = ranges[segment]\n\t\tvar aboveMin = range.start <= selection.start\n\t\tvar belowMax = range.end >= selection.end\n\t\tif (aboveMin && belowMax) {\n\t\t\treturn segment\n\t\t}\n\t}\n\treturn 'hrs'\n}\n","var get_ancestors = require('./get_ancestors')\n\nmodule.exports = function get_label($input) {\n\tvar labelText =\n\t\taria_labelledby($input) ||\n\t\taria_label($input) ||\n\t\tfor_attribute($input) ||\n\t\tlabel_wrapper_element($input) ||\n\t\ttitle_attribute($input)\n\n\tif (labelText) return labelText\n\n\tconsole.error('Label text for input not found.', $input)\n\tthrow new Error('Cannot polyfill time input due to a missing label.')\n}\n\nfunction aria_labelledby($input) {\n\tvar ariaLabelByID = $input.getAttribute('aria-labelledby')\n\tif (ariaLabelByID) {\n\t\tvar $ariaLabelBy = document.getElementById(ariaLabelByID)\n\t\tif ($ariaLabelBy) return $ariaLabelBy.textContent\n\t}\n\treturn false\n}\n\nfunction aria_label($input) {\n\tvar ariaLabel = $input.getAttribute('aria-label')\n\tif (ariaLabel) return ariaLabel\n\treturn false\n}\n\nfunction for_attribute($input) {\n\tif ($input.id) {\n\t\tvar $forLabel = document.querySelector('label[for=\"' + $input.id + '\"]')\n\t\tif ($forLabel) return $forLabel.textContent\n\t}\n\treturn false\n}\n\nfunction label_wrapper_element($input) {\n\tvar ancestors = get_ancestors($input, 'label')\n\tvar $parentLabel = ancestors[ancestors.length - 1]\n\tif ($parentLabel.nodeName == 'LABEL') return $parentLabel.textContent\n\treturn false\n}\n\nfunction title_attribute($input) {\n\tvar titleLabel = $input.getAttribute('title')\n\tif (titleLabel) return titleLabel\n\treturn false\n}\n","module.exports = function get_selected_range($input) {\n\treturn { start: $input.selectionStart, end: $input.selectionEnd }\n}\n","var convert_number = require('../converters/convert_number')\n\nmodule.exports = function get_values($input, timeString) {\n\tvar value = timeString ? timeString : $input.value\n\tvar regEx = /([0-9-]{1,2})\\:([0-9-]{1,2})\\s?(AM|PM|\\-\\-)?/\n\tvar result = regEx.exec(value)\n\n\treturn {\n\t\thrs: convert_number(result[1]),\n\t\tmin: convert_number(result[2]),\n\t\tmode: result[3],\n\t}\n}\n","var manual_entry_log = []\n\nfunction clear() {\n\tmanual_entry_log = []\n}\n\nfunction add(entry) {\n\tmanual_entry_log.push(entry)\n}\n\nfunction items() {\n\treturn manual_entry_log\n}\n\nmodule.exports = {\n\titems: items,\n\tclear: clear,\n\tadd: add,\n}\n","// IE11 doesn't support Object.values()\nmodule.exports = function values(obj) {\n\tvar key_values = []\n\tfor (var key in obj) {\n\t\tkey_values.push(obj[key])\n\t}\n\treturn key_values\n}\n","var toArray = require('../converters/toArray')\n\nmodule.exports = function _$$(selector) {\n\tvar elements = document.querySelectorAll(selector)\n\treturn toArray(elements)\n}\n","var traverse = require('./traverse')\n\nmodule.exports = function next_segment($input) {\n\ttraverse($input, 'next')\n}\n","var traverse = require('./traverse')\n\nmodule.exports = function prev_segment($input) {\n\ttraverse($input, 'prev')\n}\n","var get_current_segment = require('../getters/get_current_segment')\nvar select_segment = require('./select_segment')\n\nmodule.exports = function select_cursor_segment($input) {\n\tvar current_segment = get_current_segment($input)\n\tselect_segment($input, current_segment)\n}\n","module.exports = function select_segment($input, segment) {\n\tset_input_type()\n\n\tvar actions = {\n\t\thrs: select(0, 2),\n\t\tmin: select(3, 5),\n\t\tmode: select(6, 8),\n\t}\n\n\tactions[segment]($input)\n\n\tfunction set_input_type() {\n\t\tvar type = segment === 'mode' ? 'text' : 'tel'\n\t\t$input.setAttribute('type', type)\n\t}\n\n\tfunction select(start, end) {\n\t\treturn function() {\n\t\t\t$input.setSelectionRange(start, end)\n\t\t}\n\t}\n}\n","var get_current_segment = require('../getters/get_current_segment')\nvar select_segment = require('../selectors/select_segment')\n\nvar manual_entry_log = require('../helpers/manual_entry_log')\nvar segments = require('../static-values/segments')\n\nvar update_a11y = require('../accessibility/update_a11y')\n\nmodule.exports = function traverse($input, direction) {\n\tvar segment = get_current_segment($input)\n\n\tvar modifier = direction === 'next' ? 1 : -1\n\tvar next_segment_index = segments.indexOf(segment) + modifier\n\n\tvar next_segment = {\n\t\tnext: segments[next_segment_index] || 'mode',\n\t\tprev: next_segment_index < 0 ? 'hrs' : segments[next_segment_index],\n\t}[direction]\n\n\tselect_segment($input, next_segment)\n\tmanual_entry_log.clear()\n\tupdate_a11y($input, ['select'])\n}\n","// I need to keep this separate from reset so that\n// I can reset without attracting focus\n\nvar set_data_attribute = require('../setters/set_data_attribute')\nvar trigger_both_events = require('../events/trigger_both_events')\n\nmodule.exports = function apply_default($input) {\n\t$input.value = '--:-- --'\n\tset_data_attribute($input, '')\n\ttrigger_both_events($input)\n}\n","var set_segment = require('./set_segment')\nvar update_a11y = require('../accessibility/update_a11y')\n\nmodule.exports = function clear_segment($input, segment) {\n\tset_segment($input, segment, '--')\n\tupdate_a11y($input, ['update'])\n}\n","var switch_mode = require('./switch_mode')\nvar nudge_time_segment = require('./nudge_time_segment')\nvar update_a11y = require('../accessibility/update_a11y')\n\nmodule.exports = function decrement($input, segment) {\n\tif (segment === 'mode') {\n\t\tswitch_mode($input, 'PM')\n\t} else {\n\t\tnudge_time_segment($input, segment, 'down')\n\t}\n\tupdate_a11y($input, ['update'])\n}\n","var get_current_segment = require('../getters/get_current_segment')\nvar decrement = require('../setters/decrement')\n\nmodule.exports = function decrement_current_segment($input) {\n\tvar current_segment = get_current_segment($input)\n\tdecrement($input, current_segment)\n}\n","var switch_mode = require('./switch_mode')\nvar nudge_time_segment = require('./nudge_time_segment')\nvar update_a11y = require('../accessibility/update_a11y')\n\nmodule.exports = function increment($input, segment) {\n\tif (segment === 'mode') {\n\t\tswitch_mode($input, 'AM')\n\t} else {\n\t\tnudge_time_segment($input, segment, 'up')\n\t}\n\tupdate_a11y($input, ['update'])\n}\n","var get_current_segment = require('../getters/get_current_segment')\nvar increment = require('../setters/increment')\n\nmodule.exports = function increment_current_segment($input) {\n\tvar current_segment = get_current_segment($input)\n\tincrement($input, current_segment)\n}\n","var get_current_segment = require('../getters/get_current_segment')\nvar set_segment = require('./set_segment')\nvar next_segment = require('../selectors/next_segment')\n\nvar manual_entry_log = require('../helpers/manual_entry_log')\nvar sorted_number_keys = require('../static-values/sorted_number_keys')\n\nmodule.exports = function manual_number_entry($input, key) {\n\tvar key_value = sorted_number_keys[key]\n\tvar segment = get_current_segment($input)\n\n\tif (segment !== 'mode') {\n\t\tvar entry_count = manual_entry_log.items().length\n\n\t\tvar upper_limits = {\n\t\t\thrs: [1, 2],\n\t\t\tmin: [5, 9],\n\t\t}\n\t\tvar limit = upper_limits[segment][entry_count]\n\n\t\tif (entry_count < 2) {\n\t\t\tmanual_entry_log.add(key_value)\n\t\t}\n\n\t\tvar full_limit = parseInt(upper_limits[segment].join(''))\n\t\tvar full_entry = parseInt(manual_entry_log.items().join(''))\n\n\t\tif (full_limit >= full_entry) {\n\t\t\tset_segment($input, segment, full_entry)\n\t\t}\n\n\t\tvar at_limit =\n\t\t\tkey_value > limit || manual_entry_log.items().length === 2\n\n\t\tif (at_limit) {\n\t\t\tnext_segment($input)\n\t\t}\n\t}\n}\n","var get_values = require('../getters/get_values')\nvar convert_hours_to_12hr_time = require('../converters/convert_hours_to_12hr_time')\nvar leading_zero = require('../converters/leading_zero')\nvar set_segment = require('./set_segment')\n\nmodule.exports = function nudge_time_segment($input, segment, direction) {\n\tvar current_values = get_values($input)\n\tvar time\n\n\tvar modifier = direction === 'up' ? 1 : -1\n\n\tif (current_values[segment] === '--') {\n\t\tvar current_time = new Date()\n\t\ttime = {\n\t\t\thrs: convert_hours_to_12hr_time(current_time.getHours()),\n\t\t\tmin: current_time.getMinutes(),\n\t\t}\n\t} else {\n\t\tvar minutes = {\n\t\t\tup: current_values.min < 59 ? current_values.min + modifier : 0,\n\t\t\tdown: current_values.min === 0 ? 59 : current_values.min + modifier,\n\t\t}\n\t\ttime = {\n\t\t\thrs: convert_hours_to_12hr_time(current_values.hrs + modifier),\n\t\t\tmin: minutes[direction],\n\t\t}\n\t}\n\n\tset_segment($input, segment, leading_zero(time[segment]))\n}\n","var apply_default = require('./apply_default')\nvar select_segment = require('../selectors/select_segment')\n\nmodule.exports = function reset($input) {\n\tapply_default($input)\n\tselect_segment($input, 'hrs')\n}\n","var convert_to_24hr_time = require('../converters/convert_to_24hr_time')\n\nmodule.exports = function set_data_attribute($input, timeString_12hr) {\n\tvar filteredString =\n\t\ttimeString_12hr.indexOf('-') > -1 ? '' : timeString_12hr\n\tvar time24hr = convert_to_24hr_time(filteredString)\n\t$input.setAttribute('data-value', time24hr)\n}\n","var get_current_segment = require('../getters/get_current_segment')\nvar set_segment = require('./set_segment')\n\nmodule.exports = function set_mode($input, type) {\n\tvar segment = get_current_segment($input)\n\tif (segment === 'mode') {\n\t\tset_segment($input, segment, type)\n\t}\n}\n","var get_values = require('../getters/get_values')\nvar leading_zero = require('../converters/leading_zero')\nvar select_segment = require('../selectors/select_segment')\nvar set_data_attribute = require('./set_data_attribute')\nvar trigger_both_events = require('../events/trigger_both_events')\n\nmodule.exports = function set_segment($input, segment, value) {\n\tvar values = get_values($input)\n\tvalues[segment] = value\n\tvar newInputVal = [\n\t\tleading_zero(values.hrs),\n\t\t':',\n\t\tleading_zero(values.min),\n\t\t' ',\n\t\tvalues.mode,\n\t].join('')\n\t$input.value = newInputVal\n\tselect_segment($input, segment)\n\tset_data_attribute($input, newInputVal)\n\ttrigger_both_events($input)\n}\n","var convert_to_12hr_time = require('../converters/convert_to_12hr_time')\nvar set_data_attribute = require('../setters/set_data_attribute')\n\nmodule.exports = function set_time($input, time_string_24hr) {\n\tvar twelveHr = convert_to_12hr_time(time_string_24hr)\n\t$input.value = twelveHr\n\tset_data_attribute($input, time_string_24hr)\n}\n","var get_values = require('../getters/get_values')\nvar set_segment = require('./set_segment')\n\nmodule.exports = function switch_mode($input, default_mode) {\n\tdefault_mode = default_mode || 'AM'\n\tvar current_mode = get_values($input).mode\n\tvar new_mode = {\n\t\t'--': default_mode,\n\t\tAM: 'PM',\n\t\tPM: 'AM',\n\t}[current_mode]\n\tset_segment($input, 'mode', new_mode)\n}\n","var switch_to_data_value = require('./switch_to_data_value')\nvar set_time = require('./set_time')\n\nmodule.exports = function switch_times($input, format) {\n\tvar is12hr = /\\s/.test($input.value)\n\n\tif (format != 12 && format != 24) {\n\t\tformat = is12hr ? 24 : 12\n\t}\n\n\tvar actions = {\n\t\t12: function() {\n\t\t\tif (!is12hr) {\n\t\t\t\tset_time($input, $input.dataset.value)\n\t\t\t}\n\t\t},\n\t\t24: function() {\n\t\t\tif (is12hr) {\n\t\t\t\tswitch_to_data_value($input)\n\t\t\t}\n\t\t},\n\t}\n\tactions[format]()\n}\n","module.exports = function($input) {\n\tvar replacementVal = $input.dataset.value\n\t$input.value = replacementVal\n}\n","var set_time = require('../setters/set_time')\n\nmodule.exports = function update_time($input) {\n\tset_time($input, $input.value)\n\treturn $input\n}\n","var all_number_keys = [\n\t// 0,  1,  2,  3,  4,  5,  6,  7,  8,  9\n\t48,\n\t49,\n\t50,\n\t51,\n\t52,\n\t53,\n\t54,\n\t55,\n\t56,\n\t57,\n\t96,\n\t97,\n\t98,\n\t99,\n\t100,\n\t101,\n\t102,\n\t103,\n\t104,\n\t105,\n]\n\nmodule.exports = all_number_keys\n","var named_keys = {\n\tArrowDown: 40,\n\tArrowRight: 39,\n\tArrowUp: 38,\n\tArrowLeft: 37,\n\tBackspace: 8,\n\tDelete: 46,\n\tTab: 9,\n\tShift: 16,\n\tEscape: 27,\n\ta: 65,\n\tp: 80,\n}\n\nmodule.exports = named_keys\n","var ranges = {\n\thrs: { start: 0, end: 2 },\n\tmin: { start: 3, end: 5 },\n\tmode: { start: 6, end: 8 },\n}\n\nmodule.exports = ranges\n","var ranges = require('./ranges')\n\nvar segments = Object.keys(ranges)\n\nmodule.exports = segments\n","var all_number_keys = require('./all_number_keys')\n\nvar sorted_number_keys = {}\n// sorted_number_keys = { 48: 0, 49: 1, 96: 0, 97: 1, ... };\nall_number_keys.forEach(function(key, index) {\n\tvar number_val = index > 9 ? index - 10 : index\n\tsorted_number_keys[key] = number_val\n})\n\nmodule.exports = sorted_number_keys\n","var apply_default = require('./core/setters/apply_default')\nvar update_time = require('./core/setters/update_time')\nvar set_data_attribute = require('./core/setters/set_data_attribute')\nvar bind_events = require('./core/events/bind_events')\nvar switch_times = require('./core/setters/switch_times')\nvar get_label = require('./core/getters/get_label')\n\nvar create_a11y_block = require('./core/accessibility/create_a11y_block')\n\nvar accessibility_block_created = false\nvar $a11y\n\nfunction TimePolyfill($input) {\n\t$input.setAttribute('autocomplete', 'off')\n\n\t// Prevent screen reader from announcing the default stuff\n\t$input.setAttribute('aria-hidden', true)\n\n\tif (!accessibility_block_created) {\n\t\t$a11y = create_a11y_block()\n\t\taccessibility_block_created = true\n\t}\n\n\tvar label = get_label($input)\n\n\t$input.polyfill = {\n\t\t$a11y: $a11y,\n\t\tlabel: label,\n\t\tautoSwap: true,\n\t\tupdate: function() {\n\t\t\tupdate_time($input)\n\t\t},\n\t\tswap: function(forcedFormat) {\n\t\t\tswitch_times($input, forcedFormat)\n\t\t},\n\t}\n\n\tif ($input.value === '' || /--/.test($input.value)) {\n\t\tapply_default($input)\n\t\tset_data_attribute($input, '')\n\t} else {\n\t\tupdate_time($input)\n\t\tset_data_attribute($input, $input.value)\n\t}\n\n\tbind_events($input)\n}\n\nif (window) window.TimePolyfill = TimePolyfill\nif (module) module.exports = TimePolyfill\n","module.exports = function($result, values) {\n\tvar $list = $result.querySelector('.result__list')\n\tvar $close = $result.querySelector('.result__close')\n\n\tvar html = ''\n\tfor (var label in values) {\n\t\tvar value = values[label].replace(\n\t\t\t/^$/,\n\t\t\t'<span class=\"visually-hidden\">blank</span>',\n\t\t)\n\t\thtml =\n\t\t\thtml +\n\t\t\t[\n\t\t\t\t'<div class=\"result__item\">',\n\t\t\t\t'<dt class=\"result__label\">',\n\t\t\t\tlabel,\n\t\t\t\t'</dt>',\n\t\t\t\t'<dd class=\"result__value\">\"',\n\t\t\t\tvalue,\n\t\t\t\t'\"</dd>',\n\t\t\t\t'</div>',\n\t\t\t].join('')\n\t}\n\t$list.innerHTML = html\n\t$result.classList.add('-visible')\n\n\t$close.onclick = function() {\n\t\t$result.classList.remove('-visible')\n\t}\n}\n","//Code for tracking Google Analytics events\nmodule.exports = function GA_trackEvent(action, categoryLabelValue) {\n\tif (typeof gtag !== 'undefined') {\n\t\tif (categoryLabelValue) {\n\t\t\tgtag('event', action, {\n\t\t\t\tevent_category: categoryLabelValue[0],\n\t\t\t\tevent_label: categoryLabelValue[1],\n\t\t\t\tvalue: categoryLabelValue[2],\n\t\t\t})\n\t\t} else {\n\t\t\tgtag('event', action)\n\t\t}\n\t} else {\n\t\tcategoryLabelValue = {}\n\t\tvar data = {\n\t\t\taction: action,\n\t\t\tevent_category: categoryLabelValue.category || 'general',\n\t\t\tevent_label: categoryLabelValue.label || '(not set)',\n\t\t\tvalue: categoryLabelValue.value,\n\t\t}\n\n\t\tconsole.log('GA event =', data, '* = required')\n\t}\n}\n","// Main javascript entry point\n// Should handle bootstrapping/starting application\n\n'use strict'\n\n// Time input polyfill\nvar TimePolyfill = require('../../index')\nvar _$$ = require('../../core/selectors/_$$')\nvar toArray = require('../../core/converters/toArray')\n\nvar result = require('../_modules/result/result')\n\nvar ga = require('./_helpers/gtag')\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\t// var $$timeInputs = _$$('input[type=\"time\"]');\n\tvar $$timeInputs = _$$('input.time')\n\t$$timeInputs.forEach(function(element) {\n\t\tnew TimePolyfill(element)\n\n\t\t// Disable auto swap\n\t\t// element.polyfill.autoSwap = false;\n\n\t\telement.oninput = function() {\n\t\t\tconsole.log('input', element.dataset.value)\n\t\t}\n\t\telement.onchange = function() {\n\t\t\tconsole.log('change', element.dataset.value)\n\t\t}\n\n\t\telement.addEventListener('change', function() {\n\t\t\tconsole.log('listener change')\n\t\t})\n\t\telement.addEventListener('input', function() {\n\t\t\tconsole.log('listener input')\n\t\t})\n\t})\n\n\tdocument.querySelector('form').onsubmit = function(e) {\n\t\te.preventDefault()\n\t\tvar labels = get_labels(this)\n\t\tvar values = get_values(this, labels)\n\t\tvar $result = document.querySelector('.result')\n\n\t\tga('form submit')\n\n\t\tresult($result, values)\n\t\t$result.focus()\n\n\t\tfunction get_labels(form) {\n\t\t\tvar labelList = []\n\t\t\ttoArray(form.children).forEach(function(element) {\n\t\t\t\tvar $label = element.querySelector('label')\n\t\t\t\tif ($label) {\n\t\t\t\t\tlabelList.push($label.textContent)\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn labelList\n\t\t}\n\n\t\tfunction get_values(form, labels) {\n\t\t\tvar valuesList = {}\n\t\t\ttoArray(form.elements).forEach(function(element, i) {\n\t\t\t\tif (element.nodeName === 'INPUT') {\n\t\t\t\t\tvaluesList[labels[i]] = element.value\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn valuesList\n\t\t}\n\t}\n})\n"]}