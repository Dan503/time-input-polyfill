mixin testPage
	#testPage.container
		h1 Tests
		- var IDs = testIdsAndLabels.IDs
		- var labels = testIdsAndLabels.labels
		- var lowerCasePrimaryLabel = labels.primaryTestsLabel.toLowerCase()

		script= ['eventsInputID', 'formID', 'formCpuValueID'].map(key => `var ${key} = '${IDs[key]}'`).join(';')

		script.
			document.addEventListener("DOMContentLoaded", () => {
				const inputElem = document.getElementById(eventsInputID)
				const formElem = document.getElementById(formID)
				const formValueElem = document.getElementById(formCpuValueID)

				formElem.addEventListener('submit', handleFormSubmit);

				function handleFormSubmit (e) {
					e.preventDefault()
					formValueElem.innerText = inputElem.value
				}
			});

		.TestComponent
			.primaryTests
				h2 Primary tests
				.primaryTests__inputContainer
					label(for=IDs.primaryInputID)=labels.primaryTestsLabel
					input.time(type="text" id=IDs.primaryInputID)
					button(id=IDs.buttonIDs.togglePolyfillID type="button") Toggle polyfill

				p.primaryTests__buttons(style="display:flex; flex-direction: column; align-items: center; gap: 1em;")
					button(id=IDs.buttonIDs.amID type="button")
						| Set !{lowerCasePrimaryLabel} time to !{staticValues.buttonAM.labelValue}
					button(id=IDs.buttonIDs.pmID type="button")
						| Set !{lowerCasePrimaryLabel} time to !{staticValues.buttonPM.labelValue}
					button(id=IDs.buttonIDs.blankID type="button")
						| Set !{lowerCasePrimaryLabel} time to !{staticValues.buttonBlank.labelValue}

				p.primaryTests__returnValue Returned value: "
					span(id=IDs.primaryValueID) [computed value]
					| "

			form.eventTests(id=IDs.formID)
				h2 Event tests

				.eventTests__inputContainer
					label(for=IDs.eventsInputID)=labels.eventTestsLabel
					input.time(type="text" id=IDs.eventsInputID)

				.eventTests__output
					p(id=IDs.eventsCpuValueID) [Event Input Value]
					p(id=IDs.eventsMainNameID) [Event Main Name]
					p(id=IDs.eventsAltNameID) [Event Alt Name]

				.eventTests__formSubmit
					button(id=IDs.buttonIDs.submitID type="submit") Submit form
					p(id=IDs.formCpuValueID)

//- TODO:
//- Need to make the actual functionality work now
